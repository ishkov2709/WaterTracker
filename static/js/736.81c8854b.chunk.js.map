{"version":3,"file":"static/js/736.81c8854b.chunk.js","mappings":"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","sources":["components/MonthStatsTable/MonthStatsTable.styled.jsx","store/waterData/selectors.js","components/MonthStatsTable/PaginationMonth/PaginationMonth.styled.jsx","utils/defineMonth.js","components/MonthStatsTable/PaginationMonth/PaginationMonth.jsx","components/MonthStatsTable/DayItemCalendar/DayItemCalendar.styled.jsx","components/MonthStatsTable/DayItemCalendar/DaysGeneralStats/DaysGeneralStats.styled.jsx","components/MonthStatsTable/DayItemCalendar/DaysGeneralStats/DaysGeneralStats.jsx","components/MonthStatsTable/DayItemCalendar/DayItemCalendar.jsx","components/MonthStatsTable/MonthStatsTable.jsx","hooks/useDaysOfMonth.js","components/WaterRatioPanel/WaterRatioPanel.styled.jsx","components/TodayListModal/TodayListModal.styled.jsx","components/common/FormInput/FormInput.styled.jsx","components/common/FormInput/FormInput.jsx","components/TodayListModal/TodayListModal.jsx","components/WaterRatioPanel/WaterRatioPanel.jsx","components/DailyNorma/DailyNorma.styled.jsx","components/DailyNorma/DailyNorma.jsx","components/TodayWaterListItem/TodayWaterListItem.styled.jsx","components/RemoveListItemModal/RemoveListItemModal.styled.jsx","components/RemoveListItemModal/RemoveListItemModal.jsx","components/TodayWaterListItem/TodayWaterListItem.jsx","components/TodayWaterList/TodayWaterList.styled.jsx","components/TodayWaterList/TodayWaterList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const CalendarBox = styled.div`\r\n  position: relative;\r\n  width: 264px;\r\n  height: 474px;\r\n\r\n  background-color: ${color.secondary.white};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    position: static;\r\n    width: 646px;\r\n    height: 318px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 544px;\r\n  }\r\n`;\r\n\r\nexport const HeadBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const TitleBox = styled.b`\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 26px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  column-gap: 26px;\r\n  row-gap: 16px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    column-gap: 34px;\r\n    row-gap: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    column-gap: 22px;\r\n  }\r\n\r\n  animation: 250ms ease-in-out smoothAppearance;\r\n`;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const dataTodaySelector = state => state.waterData.dataToday;\r\n\r\nexport const selectDailyNorma = state => state.auth.user.dailyNorma;\r\n\r\nexport const selectTotalTodayDailyWater = createSelector(\r\n  dataTodaySelector,\r\n  selectDailyNorma,\r\n  (waterData, norma) => {\r\n    const totalTodayWater = waterData.reduce((total, waterData) => {\r\n      return total + waterData.dosage;\r\n    }, 0);\r\n    // console.log(norma );\r\n    return Number((totalTodayWater / 1000 / norma) * 100).toFixed(0);\r\n  }\r\n);\r\n\r\nexport const selectIsLoading = state => state.waterData.isLoading;\r\n\r\nexport const selectTodayListModalOpen = state =>\r\n  state.waterData.todayListModalOpen;\r\nexport const targetDaySelector = state => state.waterData.targetDay;\r\n\r\nexport const daysOfMonthSelector = state => state.waterData.daysOfMonth;\r\n\r\nexport const isLoadingSelector = state => state.waterData.isLoading;\r\n\r\nexport const isChangeNoteSelector = state => state.waterData.isChangeNote;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const MonthAndYear = styled.p`\r\n  width: 120px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  background: transparent;\r\n\r\n  border: none;\r\n\r\n  transition: transform 250ms ease-in-out;\r\n\r\n  &:first-of-type .icon {\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  &:last-of-type .icon {\r\n    transform: rotate(270deg);\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.3);\r\n  }\r\n`;\r\n","import { format } from 'date-fns';\r\n\r\nexport const defineMonth = (year, month, day) => {\r\n  return format(new Date(year, month, day), 'MMMM');\r\n};\r\n","import { useContext, useEffect } from 'react';\r\nimport { Btn, MonthAndYear, Wrapper } from './PaginationMonth.styled';\r\nimport Icon from 'components/common/Icon';\r\nimport { color } from 'styles/colors';\r\nimport { HomeContext } from 'pages/HomePage/HomePage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { swithChangeNote } from 'store/waterData/waterDataSlice';\r\nimport { defineMonth } from 'utils/defineMonth';\r\nimport { isLoadingSelector } from 'store/waterData/selectors';\r\n\r\nconst PaginationMonth = () => {\r\n  const { date, setDate, titleMonth, setTitleMonth } = useContext(HomeContext);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(isLoadingSelector);\r\n\r\n  useEffect(() => {\r\n    if (date) {\r\n      setTitleMonth(defineMonth(date.year, date.month, date.day));\r\n    }\r\n  }, [date, setTitleMonth]);\r\n\r\n  const handleIncrementMonth = () => {\r\n    if (date.month + 1 > 11) {\r\n      setDate(prevState => ({\r\n        ...prevState,\r\n        year: prevState.year + 1,\r\n        month: 0,\r\n      }));\r\n      dispatch(swithChangeNote(true));\r\n      return;\r\n    }\r\n    setDate(prevState => ({\r\n      ...prevState,\r\n      month: prevState.month + 1,\r\n    }));\r\n    dispatch(swithChangeNote(true));\r\n    return;\r\n  };\r\n\r\n  const handleDecrementMonth = () => {\r\n    if (date.month - 1 < 0) {\r\n      setDate(prevState => ({\r\n        ...prevState,\r\n        year: prevState.year - 1,\r\n        month: 11,\r\n      }));\r\n      dispatch(swithChangeNote(true));\r\n      return;\r\n    }\r\n    setDate(prevState => ({\r\n      ...prevState,\r\n      month: prevState.month - 1,\r\n    }));\r\n    dispatch(swithChangeNote(true));\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Btn onClick={handleDecrementMonth} disabled={isLoading}>\r\n        <Icon\r\n          name=\"arrow-down\"\r\n          fill={color.primary.blue}\r\n          stroke={color.primary.blue}\r\n          width={14}\r\n          height={14}\r\n        />\r\n      </Btn>\r\n      <MonthAndYear>\r\n        {titleMonth}, {date.year}\r\n      </MonthAndYear>\r\n      <Btn onClick={handleIncrementMonth} disabled={isLoading}>\r\n        <Icon\r\n          name=\"arrow-down\"\r\n          fill={color.primary.blue}\r\n          stroke={color.primary.blue}\r\n          width={14}\r\n          height={14}\r\n        />\r\n      </Btn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PaginationMonth;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Item = styled.li`\r\n  position: static;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  border-radius: 50%;\r\n\r\n  background-color: ${color.primary.white};\r\n\r\n  border: ${props =>\r\n    props.isDone ? 'none' : `1px solid ${color.secondary.orange}`};\r\n\r\n  margin-bottom: 4px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 34px;\r\n    height: 34px;\r\n  }\r\n`;\r\n\r\nexport const CountDay = styled.p`\r\n  font-size: 14px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const Percent = styled.p`\r\n  color: ${color.secondary.azure};\r\n\r\n  text-align: center;\r\n\r\n  font-size: 10px;\r\n  line-height: 1.25;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 13px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: absolute;\r\n  top: -160px;\r\n  left: -7px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n\r\n  width: 292px;\r\n  height: 188px;\r\n\r\n  padding: 24px 13px;\r\n\r\n  background-color: ${color.primary.white};\r\n\r\n  border-radius: 10px;\r\n\r\n  box-shadow: 0 4px 4px 0 #407bff4d;\r\n\r\n  z-index: 10;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 24px 16px;\r\n    top: -189px;\r\n    left: ${({ isToLeft }) => (isToLeft ? '17px' : '-275px')};\r\n  }\r\n\r\n  animation: 250ms ease-in-out smoothAppearance;\r\n`;\r\n\r\nexport const DateMonthTitle = styled.p`\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const MarkTitle = styled.p`\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const Mark = styled.span`\r\n  color: ${color.primary.blue};\r\n\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  position: absolute;\r\n  background: transparent;\r\n  border: none;\r\n\r\n  top: 21px;\r\n  right: 13px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    right: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    display: none;\r\n  }\r\n\r\n  & .icon {\r\n    transform: rotate(45deg);\r\n  }\r\n`;\r\n","import Icon from 'components/common/Icon';\r\nimport {\r\n  Btn,\r\n  DateMonthTitle,\r\n  Mark,\r\n  MarkTitle,\r\n  Wrapper,\r\n} from './DaysGeneralStats.styled';\r\nimport { color } from 'styles/colors';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeTargetDay } from 'store/waterData/waterDataSlice';\r\n\r\nconst firstOfFourDaysArr = [1, 2, 3, 4, 11, 12, 13, 14, 21, 22, 23, 24, 31];\r\n\r\nconst DaysGeneralStats = ({\r\n  targetDay: { day, month, servings = 0, percent },\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(removeTargetDay());\r\n  };\r\n\r\n  const dailyNorma = 1500;\r\n\r\n  return (\r\n    <Wrapper isToLeft={firstOfFourDaysArr.includes(day)}>\r\n      <Btn onClick={handleClose}>\r\n        <Icon name=\"plus\" stroke={color.primary.blue} />\r\n      </Btn>\r\n      <DateMonthTitle>\r\n        {day}, {month}\r\n      </DateMonthTitle>\r\n      <MarkTitle>\r\n        Daily norma: <Mark>{dailyNorma / 1000} L</Mark>\r\n      </MarkTitle>\r\n      <MarkTitle>\r\n        Fulfillment of the daily norm: <Mark>{percent}%</Mark>\r\n      </MarkTitle>\r\n      <MarkTitle>\r\n        How many servings of water: <Mark>{servings}</Mark>\r\n      </MarkTitle>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DaysGeneralStats;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Btn, CountDay, Item, Percent } from './DayItemCalendar.styled';\r\nimport { setTargetDay, removeTargetDay } from 'store/waterData/waterDataSlice';\r\nimport { memo, useContext, useEffect, useState } from 'react';\r\nimport {\r\n  dataTodaySelector,\r\n  daysOfMonthSelector,\r\n  targetDaySelector,\r\n} from 'store/waterData/selectors';\r\nimport { HomeContext } from 'pages/HomePage/HomePage';\r\nimport DaysGeneralStats from 'components/MonthStatsTable/DayItemCalendar/DaysGeneralStats';\r\n\r\nconst dateNow = new Date();\r\n\r\nconst DayItemCalendar = memo(({ day }) => {\r\n  const { titleMonth, date } = useContext(HomeContext);\r\n  const [percent, setPercent] = useState(0);\r\n  const [dayData, setDayData] = useState(null);\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth >= 1440);\r\n  const dispatch = useDispatch();\r\n  const targetDay = useSelector(targetDaySelector);\r\n  const daysOfMonth = useSelector(daysOfMonthSelector);\r\n  const dataToday = useSelector(dataTodaySelector);\r\n\r\n  const dailyNorma = 1500;\r\n\r\n  useEffect(() => {\r\n    if (day) {\r\n      setDayData(\r\n        dateNow.getFullYear() === date.year &&\r\n          dateNow.getMonth() === date.month &&\r\n          dateNow.getDate() === day\r\n          ? {\r\n              day: day.day,\r\n              overall: dataToday.reduce((acc, el) => el.dosage + acc, 0),\r\n              servings: dataToday.length,\r\n            }\r\n          : daysOfMonth.find(el => el.day === day)\r\n      );\r\n    }\r\n  }, [setDayData, dataToday, date, day, daysOfMonth]);\r\n\r\n  useEffect(() => {\r\n    if (daysOfMonth && dayData) {\r\n      const res =\r\n        dayData.overall >= dailyNorma\r\n          ? 100\r\n          : Math.round((dayData.overall / dailyNorma) * 100);\r\n      setPercent(res);\r\n    }\r\n  }, [daysOfMonth, setPercent, dayData]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsDesktop(window.innerWidth >= 1440);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleOnTarget = () => {\r\n    const info = {\r\n      ...dayData,\r\n      month: titleMonth,\r\n      day,\r\n      percent,\r\n    };\r\n    dispatch(setTargetDay(info));\r\n  };\r\n\r\n  const handleOffTarget = () => {\r\n    dispatch(removeTargetDay());\r\n  };\r\n\r\n  return (\r\n    <Item>\r\n      {isDesktop ? (\r\n        <Btn\r\n          onMouseEnter={handleOnTarget}\r\n          onMouseLeave={handleOffTarget}\r\n          isDone={percent === 100}\r\n        >\r\n          <CountDay>{day}</CountDay>\r\n        </Btn>\r\n      ) : (\r\n        <Btn onClick={handleOnTarget} isDone={percent === 100}>\r\n          <CountDay>{day}</CountDay>\r\n        </Btn>\r\n      )}\r\n\r\n      <Percent>{percent}%</Percent>\r\n\r\n      {targetDay?.day === day && <DaysGeneralStats targetDay={targetDay} />}\r\n    </Item>\r\n  );\r\n});\r\n\r\nexport default DayItemCalendar;\r\n","import { CalendarBox, HeadBox, List, TitleBox } from './MonthStatsTable.styled';\r\nimport { useContext } from 'react';\r\nimport { useDaysOfMonth } from 'hooks/useDaysOfMonth';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoadingSelector } from 'store/waterData/selectors';\r\nimport { HomeContext } from 'pages/HomePage/HomePage';\r\nimport PaginationMonth from './PaginationMonth';\r\nimport DayItemCalendar from './DayItemCalendar';\r\n\r\nconst MonthStatsTable = () => {\r\n  const { date } = useContext(HomeContext);\r\n  const days = useDaysOfMonth(date);\r\n  const isLoading = useSelector(isLoadingSelector);\r\n\r\n  return (\r\n    <CalendarBox>\r\n      <HeadBox>\r\n        <TitleBox>Month</TitleBox>\r\n        <PaginationMonth />\r\n      </HeadBox>\r\n      {days.length > 0 && !isLoading && (\r\n        <List>\r\n          {days.map(({ year, month, day }) => {\r\n            return <DayItemCalendar key={`${year}${month}${day}`} day={day} />;\r\n          })}\r\n        </List>\r\n      )}\r\n    </CalendarBox>\r\n  );\r\n};\r\n\r\nexport default MonthStatsTable;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useDaysOfMonth = date => {\r\n  const [days, setDays] = useState(0);\r\n  const [arrMonth, setArrMonth] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const generateDaysArray = () => {\r\n      const arr = [];\r\n      for (let i = 1; i <= days; i++) {\r\n        arr.push({ year: date.year, month: date.month, day: i });\r\n      }\r\n      setArrMonth(arr);\r\n    };\r\n\r\n    if (date) {\r\n      setDays(new Date(date.year, date.month + 1, 0).getDate());\r\n      setArrMonth([]);\r\n    }\r\n\r\n    generateDaysArray();\r\n  }, [date, days]);\r\n\r\n  return arrMonth;\r\n};\r\n","import styled from 'styled-components';\r\nimport { color } from '../../styles/colors';\r\n\r\nexport const WaterRatioPanelContainer = styled.div`\r\n    width: 280px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n    width: 704px;\r\n    gap: 24px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 592px;\r\n    gap: 32px;\r\n  }\r\n`;\r\n\r\nexport const WaterRange = styled.input`\r\n  &[type='range'] {\r\n    //  overflow: hidden;\r\n    -webkit-appearance: none;\r\n    margin: 5px 0;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background-color: ${color.secondary.azure};\r\n    background-image: linear-gradient(${color.primary.blue},${color.primary.blue});\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  &[type='range']:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &[type='range']::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 8px;\r\n    animate: 0.2s;\r\n    border-radius: 10px;\r\n     -webkit-appearance: none;\r\n    box-shadow: none;\r\n    border: none;\r\n    background: transparent;\r\n  }\r\n\r\n  &[type='range']::-webkit-slider-thumb {\r\n    height: 14px;\r\n    width: 14px;\r\n    border-radius: 50%;\r\n    background: ${color.primary.white};\r\n    border: solid 1px ${color.primary.blue};\r\n    // box-shadow: -80px 0 4px 0px rgba(0,0,0, 1);\r\n    -webkit-appearance: none;\r\n    margin-top: -4px;\r\n  }\r\n\r\n  &[type=range]:focus::-webkit-slider-runnable-track {\r\n    //background: #000;\r\n   }\r\n`;\r\n\r\nexport const WaterRangeHeader = styled.p`\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  margin-bottom: 16px;\r\n  color: ${color.primary.blue};\r\n`;\r\nexport const WaterRangeContainer = styled.div`\r\n  position: relative;\r\n  //width: 391px;\r\n  height: 102px;   \r\n  display: flex;\r\n  flex-direction: column;\r\n  //gap: 10px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      width:356px;\r\n      height: 90px; \r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n \r\n  }\r\n`;\r\n\r\nexport const MarksContainer = styled.div`\r\n  height: 32px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Mark = styled.span`\r\n  position: absolute;\r\n  transform: translateX(-50%);\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  margin-bottom: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  color: ${color.primary.blue};\r\n\r\n  &::before {\r\n    color: ${color.secondary.azure};\r\n    content: '|';\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const LeftMark = styled.span`\r\n    transform: translateX(-50%);\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    line-height: 16px;\r\n    letter-spacing: 0em;\r\n    text-align: center;\r\n    color: ${color.primary.blue};\r\n\r\n  &::before {\r\n  color: ${color.secondary.azure};\r\n  display: flex;\r\n  gap:4px\r\n  flex-direction: column;\r\n  content: '|';\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n}`;\r\n\r\nexport const RightMark = styled.span`\r\n  transform: translateX(50%);\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  color: ${color.primary.blue};\r\n\r\n  &::before {\r\n    color: ${color.secondary.azure};\r\n    display: flex;\r\n    flex-direction: column;\r\n    content: '|';\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const AddWaterButton = styled.button`\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  padding 6px 76px 6px 76px;\r\n  background-color: ${color.primary.blue};\r\n  color: ${color.primary.white};\r\n  border: none;\r\n\r\n     @media screen and (min-width: 768px) {\r\n    width:336px;\r\n    padding 10px 104px 10px 104px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  width: 178px;\r\n  height: 44px;\r\n  padding: 10px 30px 10px 30px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const TodayModalListHeader = styled.p`\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  line-height: 32px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nexport const TodayModalListTitle = styled.p`\r\n  width: 256px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const TodayModalListSubTitle = styled.p`\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const CommonContainer = styled.div`\r\n  position: relative;\r\n  width: 256px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 656px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 544px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 24px;\r\n  }\r\n`;\r\n\r\nexport const WaterInfoContainer = styled.div`\r\nwidth: 254px;\r\n//height: 52px;\r\ndisplay flex;\r\npadding: 8px 24px 8px 24px;\r\nborder-radius: 10px;\r\ngap: 12px;\r\nbackground-color: ${color.secondary.gray}\r\n`;\r\n\r\nexport const WaterInfo = styled.p`\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.blue};\r\n`;\r\nexport const WaterTime = styled.p`\r\n  font-size: 12px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const AmountWaterContainer = styled.div`\r\nwidth: 194px;\r\ndisplay flex;\r\nflex-direction: column;\r\ngap: 12px;\r\n`;\r\n\r\nexport const AmountWaterButtonContainer = styled.div`\r\nwidth: 194px;\r\ndisplay flex;\r\njustify-content:center;\r\nalign-items: center;\r\npadding: 8px 24px 8px 24px;\r\nborder-radius: 10px;\r\ngap: 12px;\r\n`;\r\n\r\nexport const WaterValueContainer = styled.div`\r\n  width: 92px;\r\n  height: 36px;\r\n  padding: 6px 10px 6px 10px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${color.secondary.gray};\r\n`;\r\n\r\nexport const WaterValue = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const ButtonContainer = styled.button`\r\n  width: 44px;\r\n  height: 44px;\r\n  padding: 10px;\r\n  border-radius: 30px;\r\n  border: 1px solid ${color.primary.blue};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const SaveContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: end;\r\n  align-items: center;\r\n  gap: 24px;\r\n\r\n  //background-color: ${color.secondary.gray}\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\nexport const CloseButton = styled.button`\r\n  // position: absolute;\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // top: 0;\r\n  // right: 0;\r\n  border: none;\r\n  background: none;\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n`;\r\n\r\nexport const LableAddEdit = styled(Label)`\r\n  gap: 12px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 12px 10px;\r\n\r\n  color: ${color.primary.blue};\r\n  border-radius: 6px;\r\n  border: 1px solid ${color.secondary.gray};\r\n  background-color: ${color.primary.white};\r\n\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n\r\n  &::placeholder {\r\n    color: ${color.secondary.azure};\r\n  }\r\n`;\r\n\r\nexport const AuthInput = styled(Input)`\r\n  @media screen and (min-width: 768px) {\r\n    width: 336px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 384px;\r\n  }\r\n`;\r\n\r\nexport const SettingsInput = styled(Input)`\r\n  @media screen and (min-width: 768px) {\r\n    width: 392px;\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: ${color.secondary.tomato};\r\n  font-size: 14px;\r\n  line-height: 1.28;\r\n`;\r\n","import {\r\n  Label,\r\n  AuthInput,\r\n  SettingsInput,\r\n  Input,\r\n  LableAddEdit,\r\n  ErrorMessage,\r\n} from './FormInput.styled';\r\n\r\nconst FormInput = ({ inputType, label, error, ...props }) => {\r\n  switch (inputType) {\r\n    case 'auth':\r\n      return (\r\n        <Label>\r\n          {label}\r\n          <AuthInput {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </Label>\r\n      );\r\n    case 'settings':\r\n      return (\r\n        <Label>\r\n          {label}\r\n          <SettingsInput {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </Label>\r\n      );\r\n    case 'dailyNorma':\r\n      return (\r\n        <Label>\r\n          {label}\r\n          <Input {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </Label>\r\n      );\r\n    case 'addEdit':\r\n      return (\r\n        <LableAddEdit>\r\n          {label}\r\n          <Input {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </LableAddEdit>\r\n      );\r\n  }\r\n};\r\n\r\nexport default FormInput;\r\n","import Modal from 'components/common/Modal';\r\nimport Icon from 'components/common/Icon';\r\nimport { color } from 'styles/colors';\r\nimport {\r\n  TodayModalListHeader,\r\n  WaterInfoContainer,\r\n  WaterInfo,\r\n  WaterTime,\r\n  TodayModalListTitle,\r\n  AmountWaterButtonContainer,\r\n  ButtonContainer,\r\n  WaterValueContainer,\r\n  WaterValue,\r\n  SaveContainer,\r\n  CommonContainer,\r\n  TodayModalListSubTitle,\r\n  AmountWaterContainer,\r\n  CloseButton,\r\n} from './TodayListModal.styled';\r\nimport FormInput from 'components/common/FormInput';\r\nimport Button from 'components/common/Button';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editWaterTodayById, saveWaterToday } from 'store/waterData/thunk';\r\nimport { MONTH } from '../../constants/month';\r\n//import { todayListModalClose } from \"store/waterData/waterDataSlice\"\r\nimport { useContext } from 'react';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport { dataTodaySelector } from 'store/waterData/selectors';\r\n\r\nconst TodayListModal = ({ type = 'save', id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const dataToday = useSelector(dataTodaySelector);\r\n\r\n  const [waterValue, setWaterValue] = useState(() => {\r\n    if (dataToday.length === 0) {\r\n      return Number(0);\r\n    }\r\n    const lastAddWaterDosageIndex = dataToday.length - 1;\r\n    return dataToday[lastAddWaterDosageIndex].dosage;\r\n  });\r\n  const [timeValue, setTimeValue] = useState(() => {\r\n    const dateNow = new Date();\r\n    let hours = dateNow.getHours().toString();\r\n    let minutes = dateNow.getMinutes().toString();\r\n    if (hours.length === 1) {\r\n      hours = '0' + hours;\r\n    }\r\n    if (minutes.length === 1) {\r\n      minutes = '0' + minutes;\r\n    }\r\n    return `${hours}:${minutes}`;\r\n  });\r\n  // console.log(timeValue);\r\n\r\n  useEffect(() => {\r\n    if (type === 'edit') {\r\n      const waterRecord = dataToday.find(data => data._id === id);\r\n      setTimeValue(waterRecord.time);\r\n      setWaterValue(waterRecord.dosage);\r\n    }\r\n  }, [dataToday, id, type]);\r\n\r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const handleDecremetWater = () => {\r\n    setWaterValue(waterValue - 50);\r\n  };\r\n  const handleIncremetWater = () => {\r\n    setWaterValue(waterValue + 50);\r\n  };\r\n\r\n  // const handleDecremetWater = () => {setWaterValue(Number(waterValue)- 50)}\r\n  // const handleIncremetWater = () => {setWaterValue(Number(waterValue) + 50)}\r\n\r\n  const handleBlurTimeInput = event => {\r\n    const timeElement = document.querySelectorAll('[water_attr=\"timeValue\"]');\r\n    timeElement.forEach(element => (element.innerHTML = timeValue));\r\n  };\r\n\r\n  const handleBlurWaterInput = event => {\r\n    setWaterValue(Number(event.currentTarget.value));\r\n    const waterElement = document.querySelectorAll('[water_attr=\"waterValue\"]');\r\n    waterElement.forEach(element => (element.innerHTML = waterValue));\r\n  };\r\n\r\n  const handleChangeWaterInput = event => {\r\n    setWaterValue(event.currentTarget.value);\r\n  };\r\n\r\n  const handleChangeTimeInput = event => {\r\n    setTimeValue(event.currentTarget.value);\r\n  };\r\n\r\n  const hadleClickSave = () => {\r\n    const today = new Date();\r\n    const data = {\r\n      dosage: waterValue,\r\n      time: timeValue,\r\n      day: today.getDate(),\r\n      month: MONTH[today.getMonth()],\r\n      year: today.getFullYear(),\r\n    };\r\n    if (type === 'edit') {\r\n      dispatch(editWaterTodayById({ id, data }));\r\n    } else {\r\n      dispatch(saveWaterToday(data));\r\n    }\r\n    toggleModal();\r\n  };\r\n\r\n  const onClickCloseBtn = () => {\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={toggleModal}>\r\n      <CommonContainer>\r\n        {/* <CloseButton onClick={onClickCloseBtn}>\r\n          <Icon width=\"12\" height=\"12\" name=\"close\" />\r\n        </CloseButton> */}\r\n        {type === 'edit' ? (\r\n          <TodayModalListHeader>\r\n            Edit the entered amount of water\r\n            <CloseButton onClick={onClickCloseBtn}>\r\n              <Icon width=\"12\" height=\"12\" name=\"close\" />\r\n            </CloseButton>\r\n          </TodayModalListHeader>\r\n        ) : (\r\n          <TodayModalListHeader>\r\n            Add of water\r\n            <CloseButton onClick={onClickCloseBtn}>\r\n              <Icon width=\"12\" height=\"12\" name=\"close\" />\r\n            </CloseButton>\r\n          </TodayModalListHeader>\r\n        )}\r\n        {type === 'edit' && (\r\n          <WaterInfoContainer>\r\n            <Icon name=\"glass\" stroke={color.primary.blue} />\r\n            <WaterInfo\r\n              water_attr=\"waterValue\"\r\n              id=\"waterInfo\"\r\n            >{`${waterValue}ml`}</WaterInfo>\r\n            <WaterTime\r\n              water_attr=\"timeValue\"\r\n              id=\"waterTime\"\r\n            >{`${timeValue}`}</WaterTime>\r\n          </WaterInfoContainer>\r\n        )}\r\n        {type === 'edit' ? (\r\n          <TodayModalListTitle>Correct entered data:</TodayModalListTitle>\r\n        ) : (\r\n          <TodayModalListTitle>Chose a value:</TodayModalListTitle>\r\n        )}\r\n        <AmountWaterContainer>\r\n          <TodayModalListSubTitle>Amount of water:</TodayModalListSubTitle>\r\n          <AmountWaterButtonContainer>\r\n            <ButtonContainer onClick={handleDecremetWater}>\r\n              <Icon name=\"minus\" stroke={color.primary.blue} />\r\n            </ButtonContainer>\r\n            <WaterValueContainer>\r\n              <WaterValue water_attr=\"waterValue\">{`${waterValue}ml`}</WaterValue>\r\n            </WaterValueContainer>\r\n            <ButtonContainer onClick={handleIncremetWater}>\r\n              <Icon name=\"plus\" stroke={color.primary.blue} />\r\n            </ButtonContainer>\r\n          </AmountWaterButtonContainer>\r\n        </AmountWaterContainer>\r\n        <FormInput\r\n          type=\"time\"\r\n          onBlur={handleBlurTimeInput}\r\n          onChange={handleChangeTimeInput}\r\n          inputType=\"addEdit\"\r\n          label=\"Recording time:\"\r\n          value={timeValue}\r\n        ></FormInput>\r\n        <FormInput\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"3000\"\r\n          onBlur={handleBlurWaterInput}\r\n          onChange={handleChangeWaterInput}\r\n          inputType=\"addEdit\"\r\n          label=\"Enter the value of the water used:\"\r\n          value={waterValue}\r\n        ></FormInput>\r\n        <SaveContainer>\r\n          <WaterValue water_attr=\"waterValue\">{`${waterValue}ml`}</WaterValue>\r\n          <Button onClick={hadleClickSave} width=\"160\">\r\n            Save\r\n          </Button>\r\n        </SaveContainer>\r\n      </CommonContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TodayListModal;\r\n","import { useEffect } from 'react';\r\nimport Icon from 'components/common/Icon';\r\nimport { color } from 'styles/colors';\r\nimport {\r\n  WaterRatioPanelContainer,\r\n  WaterRangeHeader,\r\n  WaterRangeContainer,\r\n  WaterRange,\r\n  MarksContainer,\r\n  LeftMark,\r\n  RightMark,\r\n  Mark,\r\n  AddWaterButton,\r\n} from './WaterRatioPanel.styled';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTotalTodayDailyWater } from \"store/waterData/selectors\";\r\nimport TodayListModal from \"components/TodayListModal/TodayListModal\";\r\nimport { ModalContext } from \"components/common/ModalProvider/ModalProvider\";\r\nimport { useContext } from \"react\";\r\n\r\nconst WaterRatioPanel = () => {\r\n  //const [rangeWaterPercentage, setRangeWaterPercentage] = useState([30]);\r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const rangeWaterPercentage = useSelector(selectTotalTodayDailyWater);\r\n  \r\n  const handleClickAdd = () => {\r\n     toggleModal(<TodayListModal/>)\r\n    }\r\n\r\n  useEffect(() => {\r\n    const ele = document.querySelector('#mark');\r\n    if (ele) {\r\n      let newVal = Number(((rangeWaterPercentage - 0) * 100) / (100 - 0));\r\n      newVal = newVal >= 100 ? 100 : newVal;\r\n      ele.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n    }\r\n  }, [rangeWaterPercentage]);\r\n\r\n  const getBackgroundSize = () => {\r\n    return {\r\n      backgroundSize: `${rangeWaterPercentage}%`\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WaterRatioPanelContainer>\r\n      <WaterRangeContainer>\r\n        <WaterRangeHeader>Today</WaterRangeHeader>\r\n        <WaterRange\r\n            type=\"range\"\r\n            maxValue={100}\r\n            minValue={0}\r\n            value={rangeWaterPercentage}\r\n            readOnly={true}\r\n            style={getBackgroundSize()}\r\n        />\r\n        <MarksContainer>\r\n          <LeftMark>0%</LeftMark>\r\n          <Mark id=\"mark\">{`${\r\n            rangeWaterPercentage > 100 ? 100 : rangeWaterPercentage\r\n          }%`}</Mark>\r\n          <RightMark>100%</RightMark>\r\n        </MarksContainer>\r\n      </WaterRangeContainer>\r\n      <AddWaterButton onClick={handleClickAdd}>\r\n        <Icon name=\"add\" stroke={color.primary.white} /> Add Water\r\n      </AddWaterButton>\r\n    </WaterRatioPanelContainer>\r\n  );\r\n};\r\n\r\nexport default WaterRatioPanel;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const DailyNormaContainer = styled.div`\r\nwidth: 164px;\r\n// height: 76px;\r\n/* position: absolute; */\r\npadding: 8px 20px 8px 20px;\r\nborder-radius: 10px;\r\n// border: 1px solid ${color.secondary.azure};\r\ndisplay: flex;\r\nflex-direction: column;\r\ngap: 12px;\r\nbox-shadow: 0px 4px 8px 4px rgba(158, 187, 255, 0.12);\r\n`\r\n\r\nexport const DailyNormaHeader = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`;\r\nexport const DailyNormaContainerWaterStat = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const DailyNormaWaterNorma = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const DailyNormaButton = styled.button`\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: ${color.secondary.azure};\r\n`;\r\n","import { useSelector } from \"react-redux\"\r\nimport { DailyNormaButton, DailyNormaContainer, DailyNormaContainerWaterStat, DailyNormaHeader, DailyNormaWaterNorma } from \"./DailyNorma.styled\"\r\nimport { selectDailyNorma } from \"store/waterData/selectors\"\r\n\r\nconst DailyNorma = () => {\r\n    \r\nconst dailyNorma = useSelector(selectDailyNorma)\r\n\r\n    return <DailyNormaContainer>\r\n        <DailyNormaHeader>My daily norma</DailyNormaHeader>\r\n            <DailyNormaContainerWaterStat>\r\n            <DailyNormaWaterNorma>{`${dailyNorma}L`}</DailyNormaWaterNorma>\r\n                <DailyNormaButton>Edit</DailyNormaButton>\r\n            </DailyNormaContainerWaterStat>\r\n        </DailyNormaContainer>\r\n}\r\n\r\nexport default DailyNorma","import styled from \"styled-components\";\r\nimport { color } from \"styles/colors\";\r\n\r\nexport const WaterInfoContainer = styled.div`\r\nwidth: 166px;\r\nheight: 26px;\r\ndisplay: flex;\r\nalign-items: center;\r\ngap: 12px;\r\n\r\n@media screen and (min-width: 768px) {\r\n    width: 206px;\r\n    height: 36px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n\r\n  }\r\n`\r\n\r\nexport const WaterInfo = styled.p`\r\nfont-size: 18px;\r\nline-height: 24px;\r\nletter-spacing: 0em;\r\ntext-align: left;\r\ncolor: ${color.primary.blue}\r\n`\r\n\r\nexport const WaterTime = styled.p`\r\nfont-size: 12px;\r\nline-height: 24px;\r\nletter-spacing: 0em;\r\ntext-align: left;\r\ncolor: ${color.primary.black}\r\n`\r\n\r\nexport const ButtonControlContainer = styled.div`\r\nwidth: 50px;\r\nheight: 16px;\r\ndisplay: flex;\r\nalign-items: center;\r\ngap: 18px\r\n`\r\n\r\nexport const ButtonControl = styled.button`\r\nwidth: 16px;\r\nheight: 16px;\r\nbackground-color: transparent;\r\nborder: none;\r\n`\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const DeleteModalBox = styled.div`\r\n  width: 256px;\r\n  height: 232px;\r\n  padding: 8px 12px;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    width: 544px;\r\n    height: 144px;\r\n  }\r\n`;\r\n\r\nexport const ButtonBox = styled.div`\r\n  display: block;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\nexport const DeleteModalTitle = styled.h2`\r\n  margin-top: 5px;\r\n  margin-bottom: 25px;\r\n  font-family: Roboto;\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  color: #2f2f2f;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    line-height: 32px;\r\n  }\r\n`;\r\nexport const DeleteModalDescription = styled.span`\r\n  font-family: Roboto;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: #2f2f2f;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    line-height: 20px;\r\n  }\r\n`;\r\nexport const TitleBox = styled.div``;\r\n\r\nexport const ButtonPadding = styled.span`\r\n  padding: 0 25px;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    width: 232px;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\nexport const ButtonMargin = styled.span`\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  background: none;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin-left: 210px;\r\n    margin-top: 9px;\r\n  }\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-left: 508px;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const BrSpan = styled.span`\r\n  @media screen and (max-width: 767px) {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n","import Modal from 'components/common/Modal';\r\nimport Button from 'components/common/Button';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useContext } from 'react';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport { deleteWaterTodayById } from 'store/waterData/thunk';\r\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\r\nimport { dataTodaySelector } from 'store/waterData/selectors';\r\nimport Icon from 'components/common/Icon';\r\nimport {\r\n  DeleteModalBox,\r\n  ButtonBox,\r\n  DeleteModalTitle,\r\n  DeleteModalDescription,\r\n  TitleBox,\r\n  ButtonPadding,\r\n  ButtonMargin,\r\n  CloseButton,\r\n  BrSpan,\r\n} from './RemoveListItemModal.styled';\r\n\r\nconst RemoveListItemModal = id => {\r\n  const WaterItem = useSelector(dataTodaySelector);\r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickDeleteBtn = () => {\r\n    dispatch(deleteWaterTodayById(id.id));\r\n    toggleModal();\r\n  };\r\n\r\n  const onClickCloseBtn = () => {\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={toggleModal}>\r\n      <DeleteModalBox>\r\n        <TitleBox>\r\n          <CloseButton onClick={onClickCloseBtn}>\r\n            <Icon width=\"15px\" height=\"15px\" name=\"close\" />\r\n          </CloseButton>\r\n          <DeleteModalTitle>Delete entry</DeleteModalTitle>\r\n          <DeleteModalDescription>\r\n            Are you sure you want to <BrSpan /> delete the entry?\r\n          </DeleteModalDescription>\r\n        </TitleBox>\r\n\r\n        <ButtonBox>\r\n          <Button\r\n            buttonType=\"cancel\"\r\n            style={{ boxShadow: 'none' }}\r\n            onClick={onClickCloseBtn}\r\n          >\r\n            <ButtonPadding>Cancel</ButtonPadding>\r\n          </Button>\r\n          <ButtonMargin>\r\n            <Button buttonType=\"delete\" onClick={onClickDeleteBtn}>\r\n              <ButtonPadding>Delete</ButtonPadding>\r\n            </Button>\r\n          </ButtonMargin>\r\n        </ButtonBox>\r\n      </DeleteModalBox>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveListItemModal;\r\n","\r\nimport {\r\n    ButtonControl, ButtonControlContainer,\r\n    WaterInfo, WaterInfoContainer, WaterTime\r\n} from \"./TodayWaterListItem.styled\"\r\nimport Icon from \"components/common/Icon\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { todayListModalOpen } from \"store/waterData/waterDataSlice\"\r\nimport { color } from \"styles/colors\"\r\nimport { ModalContext } from \"components/common/ModalProvider/ModalProvider\"\r\nimport { useContext } from \"react\"\r\nimport RemoveListItemModal from \"components/RemoveListItemModal/RemoveListItemModal\"\r\nimport TodayListModal from \"components/TodayListModal/TodayListModal\";\r\n\r\nconst TodayWaterListItem = ({ waterInfo, handleRemove }) => {\r\n    const toggleModal = useContext(ModalContext);\r\n\r\n\r\n   // const toggleModal = useContext(ModalContext);\r\n\r\n   // const dispatch = useDispatch()\r\n    \r\n    const handleClickEdit = (id) => {\r\n       // console.log(id);\r\n        toggleModal(<TodayListModal type=\"edit\" id={id} />)\r\n       // dispatch(todayListModalOpen())\r\n    }\r\n\r\n    const handleClickDelete = (id) => {\r\n        toggleModal(<RemoveListItemModal id={id} />)\r\n    }\r\n\r\n    //const handleClickDelete = (id)=> { console.log(id); dispatch(deleteWaterTodayById(id))}\r\n\r\n\r\n\r\n    // const  waterItem  = props\r\n    // console.log(\"WaterInfo\");\r\n    // console.log(waterInfo.id);\r\n    \r\n    return <>\r\n                <WaterInfoContainer>\r\n                    <Icon name=\"glass\" stroke={color.primary.blue}/>\r\n            <WaterInfo>{`${waterInfo.dosage}ml`}</WaterInfo>\r\n            <WaterTime>{`${waterInfo.time}`}</WaterTime>\r\n        </WaterInfoContainer>\r\n        <ButtonControlContainer>\r\n            <ButtonControl onClick={() => handleClickEdit(waterInfo._id)}>\r\n                <Icon name=\"note\" width=\"16px\" height=\"16px\" stroke={color.primary.blue} />\r\n            </ButtonControl>\r\n            <ButtonControl onClick={() => handleClickDelete(waterInfo._id)}>\r\n                <Icon name=\"remove\" width=\"16px\" height=\"16px\" stroke={color.secondary.tomato} />\r\n            </ButtonControl>\r\n        </ButtonControlContainer >\r\n    </>  \r\n}\r\n\r\nexport default TodayWaterListItem;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const TodayWaterListItemContainer = styled.li`\r\n  // width: 254px;\r\n  // height: 26px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-bottom: 12px;\r\n  border-bottom: 1px solid ${color.secondary.gray};\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    //width: 534px;\r\n  }\r\n`;\r\n\r\nexport const TodayWaterListContainer = styled.div`\r\n  width: 254px;\r\n  //height: 260px;\r\n  display: flex;\r\n  // gap: 16px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  // align-items: center;\r\n\r\n  margin-bottom: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 656px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 534px;\r\n  }\r\n`;\r\n\r\nexport const TodayWaterListing = styled.ul`\r\n  width: 254px;\r\n  height: 212px;\r\n  display: flex;\r\n  gap: 12px;\r\n  flex-direction: column;\r\n  // justify-content: center;\r\n  // align-items: center;\r\n  overflow-y: scroll;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 656px;\r\n    height: 212px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 534px;\r\n  }\r\n\r\n  &\r\n/* width */\r\n::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n  &\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n    background: ${color.secondary.gray};\r\n  }\r\n  &\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n    background: ${color.primary.blue};\r\n  }\r\n  &\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: ${color.primary.blue};\r\n  }\r\n`;\r\n\r\nexport const TodayWaterListHeader = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  line-height: 30px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  padding-bottom: 16px;\r\n  color: ${color.primary.black} @media screen and (min-width: 768px) {\r\n    font-size: 26px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n\r\nexport const AddWaterButton = styled.button`\r\n  display: flex;\r\n  gap: 8px;\r\n\r\n  align-items: center;\r\n\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n\r\n  background-color: transparent;\r\n  color: ${color.primary.blue};\r\n  border: none;\r\n\r\n  margin-top: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 18px;\r\n\r\n    line-height: 24px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n","import TodayWaterListItem from '../TodayWaterListItem/TodayWaterListItem';\r\nimport Icon from 'components/common/Icon';\r\nimport { color } from 'styles/colors';\r\nimport {\r\n  TodayWaterListContainer,\r\n  TodayWaterListHeader,\r\n  TodayWaterListing,\r\n  AddWaterButton,\r\n  TodayWaterListItemContainer,\r\n} from './TodayWaterList.styled';\r\nimport WaterRatioPanel from 'components/WaterRatioPanel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dataTodaySelector, selectIsLoading } from 'store/waterData/selectors';\r\nimport Loader from 'components/common/Loader';\r\nimport { todayListModalOpen } from 'store/waterData/waterDataSlice';\r\nimport { useContext } from 'react';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\r\n\r\n// const waterItems = [ {\r\n//         \"_id\": \"654e2ea72de1793f78f30405\",\r\n//         \"dosage\": 350,\r\n//         \"time\": \"8:00\",\r\n//         \"day\": 19,\r\n//         \"month\": \"November\"\r\n//     },\r\n//     {\r\n//         \"_id\": \"654e2eb02de1793f78f30407\",\r\n//         \"dosage\": 350,\r\n//         \"time\": \"10:00\",\r\n//         \"day\": 19,\r\n//         \"month\": \"November\"\r\n//     },\r\n//]\r\n\r\nconst TodayWaterList = () => {\r\n  const toggleModal = useContext(ModalContext);\r\n  const waterItems = useSelector(dataTodaySelector);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickAdd = () => {\r\n    // console.log(id);\r\n    //  dispatch(todayListModalOpen())\r\n    toggleModal(<TodayListModal />);\r\n  };\r\n  //console.log(waterItems);\r\n\r\n\r\n    return <TodayWaterListContainer>\r\n        {isLoading && <Loader/>}\r\n        <TodayWaterListHeader>Today</TodayWaterListHeader>\r\n        <TodayWaterListing>\r\n            {waterItems.map(waterItem => <TodayWaterListItemContainer key={waterItem._id}><TodayWaterListItem waterInfo={waterItem} /></TodayWaterListItemContainer>)}\r\n        </TodayWaterListing>\r\n        <AddWaterButton onClick={handleClickAdd}> <Icon name=\"plus\" stroke={color.primary.blue } /> Add Water</AddWaterButton>\r\n    </TodayWaterListContainer>\r\n};\r\n\r\nexport default TodayWaterList;\r\n","import Container from 'components/common/Container';\r\nimport { Wrapper, Box, WaterList, DailyNormaBox } from './HomePage.styled';\r\n// DailyNorma,\r\n//import TodayWaterListItem from './TodayWaterListItem';\r\nimport MonthStatsTable from 'components/MonthStatsTable';\r\nimport WaterRatioPanel from 'components/WaterRatioPanel/WaterRatioPanel';\r\nimport DaysGeneralStats from 'components/MonthStatsTable/DayItemCalendar/DaysGeneralStats';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  isChangeNoteSelector,\r\n  selectTodayListModalOpen,\r\n  targetDaySelector,\r\n} from 'store/waterData/selectors';\r\nimport DailyNorma from 'components/DailyNorma/DailyNorma';\r\nimport TodayWaterList from 'components/TodayWaterList/TodayWaterList';\r\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\r\nimport { createContext, useEffect, useState } from 'react';\r\nimport { getMonthDays, getWaterToday } from 'store/waterData/thunk';\r\nimport { defineMonth } from 'utils/defineMonth';\r\n\r\nconst dateNow = new Date();\r\n\r\nexport const HomeContext = createContext();\r\n\r\nconst HomePage = () => {\r\n  const [date, setDate] = useState({\r\n    year: dateNow.getFullYear(),\r\n    month: dateNow.getMonth(),\r\n    day: dateNow.getDate(),\r\n  });\r\n  const [titleMonth, setTitleMonth] = useState(\r\n    defineMonth(date.year, date.month, date.day)\r\n  );\r\n  const dispatch = useDispatch();\r\n  const isChangeNote = useSelector(isChangeNoteSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(getWaterToday());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isChangeNote) {\r\n      const params = {\r\n        year: date.year,\r\n        month: defineMonth(date.year, date.month, date.day),\r\n      };\r\n      dispatch(getMonthDays(params));\r\n    }\r\n  }, [titleMonth, date, isChangeNote, dispatch]);\r\n\r\n  const targetDay = useSelector(targetDaySelector);\r\n  const ListModalOpen = useSelector(selectTodayListModalOpen);\r\n\r\n  return (\r\n    <HomeContext.Provider value={{ date, setDate, titleMonth, setTitleMonth }}>\r\n      <Wrapper>\r\n        <Container>\r\n          <Box>\r\n            <DailyNormaBox>\r\n              <DailyNorma>\r\n                {/* <div>1.7</div>\r\n              <form action=\"\">\r\n                <input type=\"range\" />\r\n                <button>add Water</button>\r\n              </form>\r\n                */}\r\n              </DailyNorma>\r\n              <WaterRatioPanel />\r\n            </DailyNormaBox>\r\n\r\n            {ListModalOpen && <TodayListModal></TodayListModal>}\r\n\r\n            <WaterList>\r\n              <TodayWaterList />\r\n              {/* <ul>\r\n              <TodayWaterListItem></TodayWaterListItem>\r\n              <li>awd123</li>\r\n              <li>awd123</li>\r\n              <li>awd123</li>\r\n              <li>awd123</li>\r\n            </ul> */}\r\n              <MonthStatsTable />\r\n\r\n              {targetDay && <DaysGeneralStats targetDay={targetDay} />}\r\n            </WaterList>\r\n          </Box>\r\n        </Container>\r\n      </Wrapper>\r\n    </HomeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["CalendarBox","styled","_templateObject","_taggedTemplateLiteral","color","HeadBox","_templateObject2","TitleBox","_templateObject3","List","_templateObject4","dataTodaySelector","state","waterData","dataToday","selectDailyNorma","auth","user","dailyNorma","selectTotalTodayDailyWater","createSelector","norma","totalTodayWater","reduce","total","dosage","Number","toFixed","selectIsLoading","isLoading","selectTodayListModalOpen","todayListModalOpen","targetDaySelector","targetDay","daysOfMonthSelector","daysOfMonth","isLoadingSelector","isChangeNoteSelector","isChangeNote","Wrapper","MonthAndYear","Btn","defineMonth","year","month","day","format","Date","_useContext","useContext","HomeContext","date","setDate","titleMonth","setTitleMonth","dispatch","useDispatch","useSelector","useEffect","_jsxs","children","_jsx","onClick","prevState","_objectSpread","swithChangeNote","disabled","Icon","name","fill","stroke","width","height","Item","props","isDone","concat","CountDay","Percent","_ref","isToLeft","DateMonthTitle","MarkTitle","Mark","_templateObject5","firstOfFourDaysArr","_ref$targetDay","_ref$targetDay$servin","servings","percent","includes","removeTargetDay","dateNow","memo","_useState","useState","_useState2","_slicedToArray","setPercent","_useState3","_useState4","dayData","setDayData","_useState5","window","innerWidth","_useState6","isDesktop","setIsDesktop","getFullYear","getMonth","getDate","overall","acc","el","length","find","res","Math","round","handleResize","addEventListener","removeEventListener","handleOnTarget","info","setTargetDay","onMouseEnter","onMouseLeave","DaysGeneralStats","days","setDays","arrMonth","setArrMonth","arr","i","push","generateDaysArray","useDaysOfMonth","PaginationMonth","map","DayItemCalendar","WaterRatioPanelContainer","WaterRange","WaterRangeHeader","WaterRangeContainer","MarksContainer","_templateObject6","LeftMark","_templateObject7","RightMark","_templateObject8","AddWaterButton","_templateObject9","TodayModalListHeader","TodayModalListTitle","TodayModalListSubTitle","CommonContainer","WaterInfoContainer","WaterInfo","WaterTime","AmountWaterContainer","AmountWaterButtonContainer","WaterValueContainer","_templateObject10","WaterValue","_templateObject11","ButtonContainer","_templateObject12","SaveContainer","_templateObject13","CloseButton","_templateObject14","Label","LableAddEdit","Input","AuthInput","SettingsInput","ErrorMessage","inputType","label","error","_objectWithoutProperties","_excluded","_ref$type","type","id","lastAddWaterDosageIndex","waterValue","setWaterValue","hours","getHours","toString","minutes","getMinutes","timeValue","setTimeValue","waterRecord","data","_id","time","toggleModal","ModalContext","onClickCloseBtn","Modal","onClose","water_attr","FormInput","onBlur","event","document","querySelectorAll","forEach","element","innerHTML","onChange","currentTarget","value","min","max","Button","today","MONTH","editWaterTodayById","saveWaterToday","rangeWaterPercentage","ele","querySelector","newVal","style","left","maxValue","minValue","readOnly","backgroundSize","TodayListModal","DailyNormaContainer","DailyNormaHeader","DailyNormaContainerWaterStat","DailyNormaWaterNorma","DailyNormaButton","ButtonControlContainer","ButtonControl","DeleteModalBox","ButtonBox","DeleteModalTitle","DeleteModalDescription","ButtonPadding","ButtonMargin","BrSpan","buttonType","boxShadow","deleteWaterTodayById","waterInfo","handleRemove","_Fragment","RemoveListItemModal","TodayWaterListItemContainer","TodayWaterListContainer","TodayWaterListing","TodayWaterListHeader","waterItems","Loader","waterItem","TodayWaterListItem","createContext","getWaterToday","params","getMonthDays","ListModalOpen","Provider","Container","Box","DailyNormaBox","DailyNorma","WaterRatioPanel","WaterList","TodayWaterList","MonthStatsTable"],"sourceRoot":""}