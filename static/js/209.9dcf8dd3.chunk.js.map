{"version":3,"file":"static/js/209.9dcf8dd3.chunk.js","mappings":"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","sources":["utils/defineMonth.js","store/waterData/selectors.js","hooks/useWaterData.js","components/DailyNorma/DailyNorma.styled.jsx","schemas/validationSchema.js","components/common/FormInput/FormInput.styled.jsx","components/common/FormInput/FormInput.jsx","components/DailyNormaModal/DailyNormaModal.styled.jsx","components/DailyNormaModal/DailyNormaModal.jsx","components/DailyNorma/DailyNorma.jsx","components/TodayWaterListItem/TodayWaterListItem.styled.jsx","components/RemoveListItemModal/RemoveListItemModal.styled.jsx","components/RemoveListItemModal/RemoveListItemModal.jsx","components/TodayListModal/TodayListModal.styled.jsx","components/TodayListModal/TodayListModal.jsx","components/TodayWaterListItem/TodayWaterListItem.jsx","components/TodayWaterList/TodayWaterList.styled.jsx","components/TodayWaterList/TodayWaterList.jsx","components/MonthStatsTable/MonthStatsTable.styled.jsx","components/MonthStatsTable/PaginationMonth/PaginationMonth.styled.jsx","components/MonthStatsTable/PaginationMonth/PaginationMonth.jsx","components/MonthStatsTable/DayItemCalendar/DayItemCalendar.styled.jsx","components/MonthStatsTable/DayItemCalendar/DaysGeneralStats/DaysGeneralStats.styled.jsx","components/MonthStatsTable/DayItemCalendar/DaysGeneralStats/DaysGeneralStats.jsx","components/MonthStatsTable/DayItemCalendar/DayItemCalendar.jsx","components/MonthStatsTable/MonthStatsTable.jsx","hooks/useDaysOfMonth.js","components/WaterRatioPanel/WaterRatioPanel.styled.jsx","components/WaterRatioPanel/WaterRatioPanel.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { format } from 'date-fns';\r\n\r\nexport const defineMonth = (year, month, day) => {\r\n  return format(new Date(year, month, day), 'MMMM');\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const dataTodaySelector = state => state.waterData.dataToday;\r\n\r\nexport const selectDailyNorma = state => state.auth.user.dailyNorma;\r\n\r\nexport const selectTotalTodayDailyWater = createSelector(\r\n  dataTodaySelector,\r\n  selectDailyNorma,\r\n  (waterData, norma) => {\r\n    const totalTodayWater = waterData.reduce((total, waterData) => {\r\n      return total + waterData.dosage;\r\n    }, 0);\r\n    return Number((totalTodayWater / 1000 / norma) * 100).toFixed(0);\r\n  }\r\n);\r\n\r\nexport const selectIsLoading = state => state.waterData.isLoading;\r\n\r\nexport const selectTodayListModalOpen = state =>\r\n  state.waterData.todayListModalOpen;\r\n\r\nexport const targetDaySelector = state => state.waterData.targetDay;\r\n\r\nexport const daysOfMonthSelector = state => state.waterData.daysOfMonth;\r\n\r\nexport const isLoadingSelector = state => state.waterData.isLoading;\r\n\r\nexport const isChangeNoteSelector = state => state.waterData.isChangeNote;\r\n","import { useSelector } from 'react-redux';\r\nimport {\r\n  dataTodaySelector,\r\n  selectTotalTodayDailyWater,\r\n  selectIsLoading,\r\n  targetDaySelector,\r\n  daysOfMonthSelector,\r\n  isChangeNoteSelector,\r\n} from 'store/waterData/selectors';\r\n\r\nexport const useWaterData = () => {\r\n  const dataToday = useSelector(dataTodaySelector);\r\n  const totalTodayDailyWater = useSelector(selectTotalTodayDailyWater);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const targetDay = useSelector(targetDaySelector);\r\n  const daysOfTheMonth = useSelector(daysOfMonthSelector);\r\n  const isChangeNote = useSelector(isChangeNoteSelector);\r\n  const daysOfMonth = useSelector(daysOfMonthSelector);\r\n\r\n  return {\r\n    dataToday,\r\n    totalTodayDailyWater,\r\n    isLoading,\r\n    targetDay,\r\n    daysOfTheMonth,\r\n    isChangeNote,\r\n    daysOfMonth,\r\n  };\r\n};\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const DailyNormaContainer = styled.div`\r\nwidth: 164px;\r\n// height: 76px;\r\n/* position: absolute; */\r\npadding: 8px 20px 8px 20px;\r\nborder-radius: 10px;\r\n// border: 1px solid ${color.secondary.azure};\r\ndisplay: flex;\r\nflex-direction: column;\r\ngap: 12px;\r\nbox-shadow: 0px 4px 8px 4px rgba(158, 187, 255, 0.12);\r\n`\r\n\r\nexport const DailyNormaHeader = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n`;\r\nexport const DailyNormaContainerWaterStat = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const DailyNormaWaterNorma = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const DailyNormaButton = styled.button`\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: ${color.secondary.azure};\r\n`;\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  gender: Yup.string().required('Required'),\r\n  weight: Yup.number()\r\n    .required('Required')\r\n    .min(0, 'Weight must be a positive number'),\r\n  activityTime: Yup.number()\r\n    .required('Required')\r\n    .min(0, 'Activity time must be a positive number'),\r\n  drankWaterAmount: Yup.number().required('Required'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n`;\r\n\r\nexport const LableAddEdit = styled(Label)`\r\n  gap: 12px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n\r\n  padding: 12px 10px;\r\n\r\n  color: ${color.primary.blue};\r\n  border-radius: 6px;\r\n  border: 1px solid ${color.secondary.gray};\r\n  background-color: ${color.primary.white};\r\n\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n\r\n  &::placeholder {\r\n    color: ${color.secondary.azure};\r\n  }\r\n`;\r\n\r\nexport const AuthInput = styled(Input)`\r\n  @media screen and (min-width: 768px) {\r\n    width: 336px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 384px;\r\n  }\r\n`;\r\n\r\nexport const SettingsInput = styled(Input)`\r\n  @media screen and (min-width: 768px) {\r\n    width: 392px;\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: ${color.secondary.tomato};\r\n  font-size: 14px;\r\n  line-height: 1.28;\r\n`;\r\n","import {\r\n  Label,\r\n  AuthInput,\r\n  SettingsInput,\r\n  Input,\r\n  LableAddEdit,\r\n  ErrorMessage,\r\n} from './FormInput.styled';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst FormInput = ({ inputType, label, error, ...props }) => {\r\n  switch (inputType) {\r\n    case 'auth':\r\n      return (\r\n        <Label>\r\n          {label}\r\n          <AuthInput {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </Label>\r\n      );\r\n    case 'settings':\r\n      return (\r\n        <Label>\r\n          {label}\r\n          <SettingsInput {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </Label>\r\n      );\r\n    case 'dailyNorma':\r\n      return (\r\n        <Label>\r\n          {label}\r\n          <Input {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </Label>\r\n      );\r\n    case 'addEdit':\r\n      return (\r\n        <LableAddEdit>\r\n          {label}\r\n          <Input {...props} />\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </LableAddEdit>\r\n      );\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nexport default FormInput;\r\n\r\nFormInput.propTypes = {\r\n  inputType: PropTypes.string,\r\n  label: PropTypes.string,\r\n  error: PropTypes.string,\r\n};\r\n","import styled from 'styled-components';\r\nimport sprite from 'img/sprites.svg';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const ModalBox = styled.div`\r\n  width: 256px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 652px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 544px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  margin-bottom: 24px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  line-height: 1.23;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const GenderFormulas = styled.div`\r\n  margin-bottom: 12px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 24px;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    flex-direction: column;\r\n    align-items: start;\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nexport const ItemsGenders = styled.p`\r\n  font-size: 16px;\r\n  line-height: 1.25;\r\n`;\r\n\r\nexport const Formulas = styled.span`\r\n  color: ${color.primary.blue};\r\n\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n`;\r\n\r\nexport const VolumeNorm = styled.p`\r\n  padding: 10px;\r\n  margin-bottom: 24px;\r\n\r\n  color: #8f8f8f;\r\n  border-radius: 10px;\r\n  border: 1px solid ${color.secondary.gray};\r\n\r\n  font-size: 12px;\r\n  line-height: 1.33;\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const FormTitle = styled.p`\r\n  // margin-bottom: 16px;\r\n\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.11;\r\n`;\r\n\r\nexport const Genders = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 24px;\r\n\r\n  label {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n\r\n    font-size: 16px;\r\n    line-height: 1.25;\r\n  }\r\n\r\n  input:checked {\r\n    fill: blue;\r\n  }\r\n`;\r\n\r\nexport const Required = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n`;\r\n\r\nexport const L = styled.b`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 6px;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  display: inline-block;\r\n  color: #407bff;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const SaveWrapper = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  @media (min-width: 768px) {\r\n    button {\r\n      width: 160px;\r\n      height: 44px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport validationSchema from 'schemas/validationSchema';\r\nimport FormInput from 'components/common/FormInput/FormInput';\r\nimport Button from 'components/common/Button';\r\nimport Icon from 'components/common/Icon/Icon';\r\nimport Modal from 'components/common/Modal';\r\nimport {\r\n  ModalBox,\r\n  ModalHeader,\r\n  CloseButton,\r\n  GenderFormulas,\r\n  ItemsGenders,\r\n  Formulas,\r\n  VolumeNorm,\r\n  StyledForm,\r\n  FormTitle,\r\n  Genders,\r\n  Required,\r\n  L,\r\n  SaveWrapper,\r\n} from './DailyNormaModal.styled';\r\nimport { useContext } from 'react';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateDailyNorma } from 'store/auth/thunk';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst DailyNormaModal = () => {\r\n  const toggleModal = useContext(ModalContext);\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useAuth();\r\n\r\n  const [calculatedWaterAmount, setCalculatedWaterAmount] = useState(0);\r\n\r\n  const calculateWaterAmount = useCallback(values => {\r\n    const weightCoefficient = values.gender === 'female' ? 0.03 : 0.04;\r\n    const timeCoefficient = values.gender === 'female' ? 0.4 : 0.6;\r\n    const calculatedAmount =\r\n      values.weight * weightCoefficient + values.activityTime * timeCoefficient;\r\n    setCalculatedWaterAmount(calculatedAmount.toFixed(2));\r\n  }, []);\r\n\r\n  const handleInputChange = (e, fieldName) => {\r\n    formik.handleChange(e);\r\n    const inputText = e.target.value;\r\n    let numericValue = parseFloat(inputText);\r\n    if (isNaN(numericValue)) {\r\n      numericValue = 0;\r\n    }\r\n    formik.setFieldValue(fieldName, numericValue);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    dispatch(updateDailyNorma(formik.values.drankWaterAmount));\r\n    formik.resetForm();\r\n    toggleModal();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      gender: user.gender,\r\n      weight: 0,\r\n      activityTime: 0,\r\n      drankWaterAmount: 0,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: handleSubmit,\r\n  });\r\n\r\n  useEffect(() => {\r\n    calculateWaterAmount(formik.values);\r\n  }, [calculateWaterAmount, formik.values]);\r\n\r\n  const onClickModalClose = () => {\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={toggleModal}>\r\n      <ModalBox>\r\n        <>\r\n          <ModalHeader>\r\n            My daily norma\r\n            <CloseButton onClick={onClickModalClose}>\r\n              <Icon\r\n                name=\"close\"\r\n                width={12}\r\n                height={12}\r\n                fill=\"#ffffff00\"\r\n                stroke=\"#407bff\"\r\n                className=\"icon\"\r\n              />\r\n            </CloseButton>\r\n          </ModalHeader>\r\n\r\n          <GenderFormulas>\r\n            <ItemsGenders>\r\n              For girl:\r\n              <Formulas> V=(M*0.03) + (T*0.4)</Formulas>\r\n            </ItemsGenders>\r\n            <ItemsGenders>\r\n              For man:\r\n              <Formulas> V=(M*0.04) + (T*0.6)</Formulas>\r\n            </ItemsGenders>\r\n          </GenderFormulas>\r\n\r\n          <VolumeNorm>\r\n            *V is the volume of the water norm in liters per day, M is your body\r\n            weight, T is the time of active sports, or another type of activity\r\n            commensurate in terms of loads (in the absence of these, you must\r\n            set 0)\r\n          </VolumeNorm>\r\n\r\n          <StyledForm>\r\n            <FormTitle>Calculate your rate:</FormTitle>\r\n\r\n            <Genders>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  checked={formik.values.gender === 'female'}\r\n                  onChange={() => formik.setFieldValue('gender', 'female')}\r\n                />\r\n                For girl\r\n              </label>\r\n\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  checked={formik.values.gender === 'male'}\r\n                  onChange={() => formik.setFieldValue('gender', 'male')}\r\n                />\r\n                For man\r\n              </label>\r\n            </Genders>\r\n\r\n            <FormInput\r\n              label=\"Enter your weight in kilograms:\"\r\n              inputType=\"dailyNorma\"\r\n              value={formik.values.weight}\r\n              onChange={e => handleInputChange(e, 'weight')}\r\n              onBlur={formik.handleBlur}\r\n              name=\"weight\"\r\n              error={formik.touched.weight && formik.errors.weight}\r\n            />\r\n\r\n            <FormInput\r\n              label=\"Enter the time of active participation in sports or other\r\n                activities with a high physical load:\"\r\n              inputType=\"dailyNorma\"\r\n              value={formik.values.activityTime}\r\n              onChange={e => handleInputChange(e, 'activityTime')}\r\n              onBlur={formik.handleBlur}\r\n              name=\"activityTime\"\r\n              error={formik.touched.activityTime && formik.errors.activityTime}\r\n            />\r\n\r\n            <Required>\r\n              <>The required amount of water in liters per day:</>\r\n              <L>\r\n                {isNaN(calculatedWaterAmount)\r\n                  ? 'Invalid'\r\n                  : `${calculatedWaterAmount} L`}\r\n              </L>\r\n            </Required>\r\n\r\n            <FormInput\r\n              label=\"Write down how much water you will drink:\"\r\n              inputType=\"dailyNorma\"\r\n              value={formik.values.drankWaterAmount}\r\n              onChange={e => handleInputChange(e, 'drankWaterAmount')}\r\n              onBlur={formik.handleBlur}\r\n              name=\"drankWaterAmount\"\r\n              error={\r\n                formik.touched.drankWaterAmount &&\r\n                formik.errors.drankWaterAmount\r\n              }\r\n            />\r\n\r\n            <SaveWrapper>\r\n              <Button type=\"submit\" onClick={handleSubmit}>\r\n                Save\r\n              </Button>\r\n            </SaveWrapper>\r\n          </StyledForm>\r\n        </>\r\n      </ModalBox>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DailyNormaModal;\r\n","import {\r\n  DailyNormaButton,\r\n  DailyNormaContainer,\r\n  DailyNormaContainerWaterStat,\r\n  DailyNormaHeader,\r\n  DailyNormaWaterNorma,\r\n} from './DailyNorma.styled';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport { useContext } from 'react';\r\nimport DailyNormaModal from 'components/DailyNormaModal/DailyNormaModal';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst DailyNorma = () => {\r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const { dailyNorma } = useAuth();\r\n\r\n  const openDailyNormaModal = () => {\r\n    toggleModal(<DailyNormaModal />);\r\n  };\r\n\r\n  return (\r\n    <DailyNormaContainer>\r\n      <DailyNormaHeader>My daily norma</DailyNormaHeader>\r\n      <DailyNormaContainerWaterStat>\r\n        <DailyNormaWaterNorma>{`${dailyNorma}L`}</DailyNormaWaterNorma>\r\n        <DailyNormaButton onClick={openDailyNormaModal}>Edit</DailyNormaButton>\r\n      </DailyNormaContainerWaterStat>\r\n    </DailyNormaContainer>\r\n  );\r\n};\r\n\r\nexport default DailyNorma;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const WaterInfoContainer = styled.div`\r\n  width: 166px;\r\n  height: 26px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 206px;\r\n    height: 36px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n\r\nexport const WaterInfo = styled.p`\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const WaterTime = styled.p`\r\n  font-size: 12px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const ButtonControlContainer = styled.div`\r\n  width: 50px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 18px;\r\n`;\r\n\r\nexport const ButtonControl = styled.button`\r\n  width: 16px;\r\n  height: 16px;\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const DeleteModalBox = styled.div`\r\n  width: 256px;\r\n  height: 232px;\r\n  padding: 8px 12px;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    width: 544px;\r\n    height: 144px;\r\n  }\r\n`;\r\n\r\nexport const ButtonBox = styled.div`\r\n  display: block;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\nexport const DeleteModalTitle = styled.h2`\r\n  margin-top: 5px;\r\n  margin-bottom: 25px;\r\n  font-family: Roboto;\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  color: #2f2f2f;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    line-height: 32px;\r\n  }\r\n`;\r\nexport const DeleteModalDescription = styled.span`\r\n  font-family: Roboto;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  color: #2f2f2f;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    line-height: 20px;\r\n  }\r\n`;\r\nexport const TitleBox = styled.div``;\r\n\r\nexport const ButtonPadding = styled.span`\r\n  padding: 0 25px;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    width: 232px;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\nexport const ButtonMargin = styled.span`\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  background: none;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin-left: 210px;\r\n    margin-top: 9px;\r\n  }\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-left: 508px;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const BrSpan = styled.span`\r\n  @media screen and (max-width: 767px) {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n","import Modal from 'components/common/Modal';\r\nimport Button from 'components/common/Button';\r\nimport { PropTypes } from 'prop-types';\r\nimport { useContext } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport { deleteWaterTodayById } from 'store/waterData/thunk';\r\nimport {\r\n  DeleteModalBox,\r\n  ButtonBox,\r\n  DeleteModalTitle,\r\n  DeleteModalDescription,\r\n  TitleBox,\r\n  ButtonPadding,\r\n  ButtonMargin,\r\n  CloseButton,\r\n  BrSpan,\r\n} from './RemoveListItemModal.styled';\r\nimport Icon from 'components/common/Icon';\r\n\r\nconst RemoveListItemModal = id => {\r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickDeleteBtn = () => {\r\n    dispatch(deleteWaterTodayById(id.id));\r\n    toggleModal();\r\n  };\r\n\r\n  const onClickCloseBtn = () => {\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={toggleModal}>\r\n      <DeleteModalBox>\r\n        <TitleBox>\r\n          <CloseButton onClick={onClickCloseBtn}>\r\n            <Icon width=\"15px\" height=\"15px\" name=\"close\" />\r\n          </CloseButton>\r\n          <DeleteModalTitle>Delete entry</DeleteModalTitle>\r\n          <DeleteModalDescription>\r\n            Are you sure you want to <BrSpan /> delete the entry?\r\n          </DeleteModalDescription>\r\n        </TitleBox>\r\n\r\n        <ButtonBox>\r\n          <Button\r\n            buttonType=\"cancel\"\r\n            style={{ boxShadow: 'none' }}\r\n            onClick={onClickCloseBtn}\r\n          >\r\n            <ButtonPadding>Cancel</ButtonPadding>\r\n          </Button>\r\n          <ButtonMargin>\r\n            <Button buttonType=\"delete\" onClick={onClickDeleteBtn}>\r\n              <ButtonPadding>Delete</ButtonPadding>\r\n            </Button>\r\n          </ButtonMargin>\r\n        </ButtonBox>\r\n      </DeleteModalBox>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveListItemModal;\r\n\r\nRemoveListItemModal.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const TodayModalListHeader = styled.p`\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  line-height: 32px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nexport const TodayModalListTitle = styled.p`\r\n  width: 256px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const TodayModalListSubTitle = styled.p`\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const CommonContainer = styled.div`\r\n  position: relative;\r\n  width: 256px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 656px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 544px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 24px;\r\n  }\r\n`;\r\n\r\nexport const WaterInfoContainer = styled.div`\r\n  width: 254px;\r\n  display: flex;\r\n  padding: 8px 24px 8px 24px;\r\n  border-radius: 10px;\r\n  gap: 12px;\r\n  background-color: ${color.secondary.gray};\r\n`;\r\n\r\nexport const WaterInfo = styled.p`\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.blue};\r\n`;\r\nexport const WaterTime = styled.p`\r\n  font-size: 12px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const AmountWaterContainer = styled.div`\r\n  width: 194px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const AmountWaterButtonContainer = styled.div`\r\n  width: 194px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 8px 24px 8px 24px;\r\n  border-radius: 10px;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const WaterValueContainer = styled.div`\r\n  width: 92px;\r\n  height: 36px;\r\n  padding: 6px 10px 6px 10px;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${color.secondary.gray};\r\n`;\r\n\r\nexport const WaterValue = styled.p`\r\n  width: 92px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const ButtonContainer = styled.button`\r\n  width: 44px;\r\n  height: 44px;\r\n  padding: 10px;\r\n  border-radius: 30px;\r\n  border: 1px solid ${color.primary.blue};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const SaveContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: end;\r\n  align-items: center;\r\n  gap: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\nexport const CloseButton = styled.button`\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  background: none;\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n","import { color } from 'styles/colors';\r\nimport {\r\n  TodayModalListHeader,\r\n  WaterInfoContainer,\r\n  WaterInfo,\r\n  WaterTime,\r\n  TodayModalListTitle,\r\n  AmountWaterButtonContainer,\r\n  ButtonContainer,\r\n  WaterValueContainer,\r\n  WaterValue,\r\n  SaveContainer,\r\n  CommonContainer,\r\n  TodayModalListSubTitle,\r\n  AmountWaterContainer,\r\n  CloseButton,\r\n} from './TodayListModal.styled';\r\nimport { PropTypes } from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editWaterTodayById, saveWaterToday } from 'store/waterData/thunk';\r\nimport { MONTH } from '../../constants/month';\r\nimport { useContext } from 'react';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport Icon from 'components/common/Icon';\r\nimport Modal from 'components/common/Modal';\r\nimport Button from 'components/common/Button';\r\nimport FormInput from 'components/common/FormInput';\r\nimport { useWaterData } from 'hooks/useWaterData';\r\n\r\nconst TodayListModal = ({ type = 'save', id }) => {\r\n  const dispatch = useDispatch();\r\n  const { dataToday } = useWaterData();\r\n\r\n  const [waterValue, setWaterValue] = useState(() => {\r\n    if (dataToday.length === 0) {\r\n      return Number(0);\r\n    }\r\n    const lastAddWaterDosageIndex = dataToday.length - 1;\r\n    return dataToday[lastAddWaterDosageIndex].dosage;\r\n  });\r\n\r\n  const [timeValue, setTimeValue] = useState(() => {\r\n    const dateNow = new Date();\r\n    let hours = dateNow.getHours().toString();\r\n    let minutes = dateNow.getMinutes().toString();\r\n    if (hours.length === 1) {\r\n      hours = '0' + hours;\r\n    }\r\n    if (minutes.length === 1) {\r\n      minutes = '0' + minutes;\r\n    }\r\n    return `${hours}:${minutes}`;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (type === 'edit') {\r\n      const waterRecord = dataToday.find(data => data._id === id);\r\n      setTimeValue(waterRecord.time);\r\n      setWaterValue(waterRecord.dosage);\r\n    }\r\n  }, [dataToday, id, type]);\r\n\r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const handleBlurTimeInput = () => {\r\n    const timeElement = document.querySelectorAll('[water_attr=\"timeValue\"]');\r\n    timeElement.forEach(element => (element.innerHTML = timeValue));\r\n  };\r\n\r\n  const handleChangeWaterInput = event => {\r\n    if (event.currentTarget.value <= 0) {\r\n      return setWaterValue(1);\r\n    }\r\n    if (event.currentTarget.value >= 3000) {\r\n      return setWaterValue(3000);\r\n    }\r\n    setWaterValue(event.currentTarget.value);\r\n  };\r\n\r\n  const handleDecremetWater = () => {\r\n    if (waterValue - 50 <= 0) {\r\n      setWaterValue(0);\r\n    } else {\r\n      setWaterValue(waterValue - 50);\r\n    }\r\n  };\r\n\r\n  const handleIncremetWater = () => {\r\n    setWaterValue(waterValue + 50);\r\n  };\r\n\r\n  const handleBlurWaterInput = event => {\r\n    setWaterValue(Number(event.currentTarget.value));\r\n    const waterElement = document.querySelectorAll('[water_attr=\"waterValue\"]');\r\n    waterElement.forEach(element => (element.innerHTML = waterValue));\r\n  };\r\n\r\n  const handleChangeTimeInput = event => {\r\n    setTimeValue(event.currentTarget.value);\r\n  };\r\n\r\n  const hadleClickSave = () => {\r\n    const today = new Date();\r\n    const data = {\r\n      dosage: waterValue,\r\n      time: timeValue,\r\n      day: today.getDate(),\r\n      month: MONTH[today.getMonth()],\r\n      year: today.getFullYear(),\r\n    };\r\n    if (type === 'edit') {\r\n      dispatch(editWaterTodayById({ id, data }));\r\n    } else {\r\n      dispatch(saveWaterToday(data));\r\n    }\r\n    toggleModal();\r\n  };\r\n\r\n  const onClickCloseBtn = () => {\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={toggleModal}>\r\n      <CommonContainer>\r\n        {type === 'edit' ? (\r\n          <TodayModalListHeader>\r\n            Edit the entered amount of water\r\n            <CloseButton onClick={onClickCloseBtn}>\r\n              <Icon width=\"12\" height=\"12\" name=\"close\" />\r\n            </CloseButton>\r\n          </TodayModalListHeader>\r\n        ) : (\r\n          <TodayModalListHeader>\r\n            Add of water\r\n            <CloseButton onClick={onClickCloseBtn}>\r\n              <Icon width=\"12\" height=\"12\" name=\"close\" />\r\n            </CloseButton>\r\n          </TodayModalListHeader>\r\n        )}\r\n        {type === 'edit' && (\r\n          <WaterInfoContainer>\r\n            <Icon name=\"glass\" stroke={color.primary.blue} />\r\n            <WaterInfo\r\n              water_attr=\"waterValue\"\r\n              id=\"waterInfo\"\r\n            >{`${waterValue}ml`}</WaterInfo>\r\n            <WaterTime\r\n              water_attr=\"timeValue\"\r\n              id=\"waterTime\"\r\n            >{`${timeValue}`}</WaterTime>\r\n          </WaterInfoContainer>\r\n        )}\r\n        {type === 'edit' ? (\r\n          <TodayModalListTitle>Correct entered data:</TodayModalListTitle>\r\n        ) : (\r\n          <TodayModalListTitle>Chose a value:</TodayModalListTitle>\r\n        )}\r\n        <AmountWaterContainer>\r\n          <TodayModalListSubTitle>Amount of water:</TodayModalListSubTitle>\r\n          <AmountWaterButtonContainer>\r\n            <ButtonContainer onClick={handleDecremetWater}>\r\n              <Icon name=\"minus\" stroke={color.primary.blue} />\r\n            </ButtonContainer>\r\n            <WaterValueContainer>\r\n              <WaterValue water_attr=\"waterValue\">{`${waterValue}ml`}</WaterValue>\r\n            </WaterValueContainer>\r\n            <ButtonContainer onClick={handleIncremetWater}>\r\n              <Icon name=\"plus\" stroke={color.primary.blue} />\r\n            </ButtonContainer>\r\n          </AmountWaterButtonContainer>\r\n        </AmountWaterContainer>\r\n        <FormInput\r\n          type=\"time\"\r\n          onBlur={handleBlurTimeInput}\r\n          onChange={handleChangeTimeInput}\r\n          inputType=\"addEdit\"\r\n          label=\"Recording time:\"\r\n          value={timeValue}\r\n        ></FormInput>\r\n        <FormInput\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"3000\"\r\n          onBlur={handleBlurWaterInput}\r\n          onChange={handleChangeWaterInput}\r\n          onClick={() => {\r\n            if (waterValue === 0) return setWaterValue('');\r\n          }}\r\n          inputType=\"addEdit\"\r\n          label=\"Enter the value of the water used:\"\r\n          value={waterValue}\r\n        ></FormInput>\r\n        <SaveContainer>\r\n          <WaterValue water_attr=\"waterValue\">{`${waterValue}ml`}</WaterValue>\r\n          <Button onClick={hadleClickSave} width=\"160\">\r\n            Save\r\n          </Button>\r\n        </SaveContainer>\r\n      </CommonContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TodayListModal;\r\n\r\nTodayListModal.propTypes = {\r\n  type: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n","import {\r\n  ButtonControl,\r\n  ButtonControlContainer,\r\n  WaterInfo,\r\n  WaterInfoContainer,\r\n  WaterTime,\r\n} from './TodayWaterListItem.styled';\r\nimport Icon from 'components/common/Icon';\r\nimport { PropTypes } from 'prop-types';\r\nimport { color } from 'styles/colors';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport { useContext } from 'react';\r\nimport RemoveListItemModal from 'components/RemoveListItemModal/RemoveListItemModal';\r\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\r\n\r\nconst TodayWaterListItem = ({ waterInfo }) => {\r\n  \r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const handleClickEdit = id => {\r\n    toggleModal(<TodayListModal type=\"edit\" id={id} />);\r\n  };\r\n\r\n  const handleClickDelete = id => {\r\n    toggleModal(<RemoveListItemModal id={id} />);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <WaterInfoContainer>\r\n        <Icon name=\"glass\" stroke={color.primary.blue} />\r\n        <WaterInfo>{`${waterInfo.dosage}ml`}</WaterInfo>\r\n        <WaterTime>{`${waterInfo.time}`}</WaterTime>\r\n      </WaterInfoContainer>\r\n      <ButtonControlContainer>\r\n        <ButtonControl onClick={() => handleClickEdit(waterInfo._id)}>\r\n          <Icon\r\n            name=\"note\"\r\n            width=\"16px\"\r\n            height=\"16px\"\r\n            stroke={color.primary.blue}\r\n          />\r\n        </ButtonControl>\r\n        <ButtonControl onClick={() => handleClickDelete(waterInfo._id)}>\r\n          <Icon\r\n            name=\"remove\"\r\n            width=\"16px\"\r\n            height=\"16px\"\r\n            stroke={color.secondary.tomato}\r\n          />\r\n        </ButtonControl>\r\n      </ButtonControlContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodayWaterListItem;\r\n\r\nTodayWaterListItem.propTypes = {\r\n  waterInfo: PropTypes.object,\r\n};\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const TodayWaterListItemContainer = styled.li`\r\n  // width: 254px;\r\n  // height: 26px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-bottom: 12px;\r\n  border-bottom: 1px solid ${color.secondary.gray};\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    //width: 534px;\r\n  }\r\n`;\r\n\r\nexport const TodayWaterListContainer = styled.div`\r\n  width: 254px;\r\n  //height: 260px;\r\n  display: flex;\r\n  // gap: 16px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  // align-items: center;\r\n\r\n  margin-bottom: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 656px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 534px;\r\n  }\r\n`;\r\n\r\nexport const TodayWaterListing = styled.ul`\r\n  width: 254px;\r\n  height: 212px;\r\n  display: flex;\r\n  gap: 12px;\r\n  flex-direction: column;\r\n  // justify-content: center;\r\n  // align-items: center;\r\n  overflow-y: scroll;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 656px;\r\n    height: 212px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 534px;\r\n  }\r\n\r\n  &\r\n/* width */\r\n::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n  &\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n    background: ${color.secondary.gray};\r\n  }\r\n  &\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n    background: ${color.primary.blue};\r\n  }\r\n  &\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: ${color.primary.blue};\r\n  }\r\n`;\r\n\r\nexport const TodayWaterListHeader = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n  line-height: 30px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  padding-bottom: 16px;\r\n  color: ${color.primary.black} @media screen and (min-width: 768px) {\r\n    font-size: 26px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n\r\nexport const AddWaterButton = styled.button`\r\n  display: flex;\r\n  gap: 8px;\r\n\r\n  align-items: center;\r\n\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n\r\n  background-color: transparent;\r\n  color: ${color.primary.blue};\r\n  border: none;\r\n\r\n  margin-top: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 18px;\r\n\r\n    line-height: 24px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n","import TodayWaterListItem from '../TodayWaterListItem/TodayWaterListItem';\r\nimport Icon from 'components/common/Icon';\r\nimport { color } from 'styles/colors';\r\nimport {\r\n  TodayWaterListContainer,\r\n  TodayWaterListHeader,\r\n  TodayWaterListing,\r\n  AddWaterButton,\r\n  TodayWaterListItemContainer,\r\n} from './TodayWaterList.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { dataTodaySelector, selectIsLoading } from 'store/waterData/selectors';\r\nimport Loader from 'components/common/Loader';\r\nimport { useContext } from 'react';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\r\n\r\nconst TodayWaterList = () => {\r\n  const toggleModal = useContext(ModalContext);\r\n  const waterItems = useSelector(dataTodaySelector);\r\n  const isLoading = useSelector(selectIsLoading);\r\n\r\n  const handleClickAdd = () => {\r\n    toggleModal(<TodayListModal />);\r\n  };\r\n\r\n  return (\r\n    <TodayWaterListContainer>\r\n      {isLoading && <Loader />}\r\n      <TodayWaterListHeader>Today</TodayWaterListHeader>\r\n      <TodayWaterListing>\r\n        {waterItems.map(waterItem => (\r\n          <TodayWaterListItemContainer key={waterItem._id}>\r\n            <TodayWaterListItem waterInfo={waterItem} />\r\n          </TodayWaterListItemContainer>\r\n        ))}\r\n      </TodayWaterListing>\r\n      <AddWaterButton onClick={handleClickAdd}>\r\n        {' '}\r\n        <Icon name=\"plus\" stroke={color.primary.blue} /> Add Water\r\n      </AddWaterButton>\r\n    </TodayWaterListContainer>\r\n  );\r\n};\r\n\r\nexport default TodayWaterList;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const CalendarBox = styled.div`\r\n  position: relative;\r\n  width: 264px;\r\n  height: 474px;\r\n\r\n  background-color: ${color.secondary.white};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    position: static;\r\n    width: 646px;\r\n    height: 318px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 544px;\r\n  }\r\n`;\r\n\r\nexport const HeadBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const TitleBox = styled.b`\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 26px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  column-gap: 26px;\r\n  row-gap: 16px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    column-gap: 34px;\r\n    row-gap: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    column-gap: 22px;\r\n  }\r\n\r\n  animation: 250ms ease-in-out smoothAppearance;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const MonthAndYear = styled.p`\r\n  width: 120px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  background: transparent;\r\n\r\n  border: none;\r\n\r\n  transition: transform 250ms ease-in-out;\r\n\r\n  &:first-of-type .icon {\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  &:last-of-type .icon {\r\n    transform: rotate(270deg);\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale(1.3);\r\n  }\r\n`;\r\n","import { useContext, useEffect } from 'react';\r\nimport { Btn, MonthAndYear, Wrapper } from './PaginationMonth.styled';\r\nimport Icon from 'components/common/Icon';\r\nimport { color } from 'styles/colors';\r\nimport { HomeContext } from 'pages/HomePage/HomePage';\r\nimport { useDispatch } from 'react-redux';\r\nimport { swithChangeNote } from 'store/waterData/waterDataSlice';\r\nimport { defineMonth } from 'utils/defineMonth';\r\nimport { useWaterData } from 'hooks/useWaterData';\r\n\r\nconst PaginationMonth = () => {\r\n  const { date, setDate, titleMonth, setTitleMonth } = useContext(HomeContext);\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useWaterData();\r\n\r\n  useEffect(() => {\r\n    if (date) {\r\n      setTitleMonth(defineMonth(date.year, date.month, date.day));\r\n    }\r\n  }, [date, setTitleMonth]);\r\n\r\n  const handleIncrementMonth = () => {\r\n    if (date.month + 1 > 11) {\r\n      setDate(prevState => ({\r\n        ...prevState,\r\n        year: prevState.year + 1,\r\n        month: 0,\r\n      }));\r\n      return dispatch(swithChangeNote(true));\r\n    }\r\n    setDate(prevState => ({\r\n      ...prevState,\r\n      month: prevState.month + 1,\r\n    }));\r\n    return dispatch(swithChangeNote(true));\r\n  };\r\n\r\n  const handleDecrementMonth = () => {\r\n    if (date.month - 1 < 0) {\r\n      setDate(prevState => ({\r\n        ...prevState,\r\n        year: prevState.year - 1,\r\n        month: 11,\r\n      }));\r\n      return dispatch(swithChangeNote(true));\r\n    }\r\n    setDate(prevState => ({\r\n      ...prevState,\r\n      month: prevState.month - 1,\r\n    }));\r\n    return dispatch(swithChangeNote(true));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Btn onClick={handleDecrementMonth} disabled={isLoading}>\r\n        <Icon\r\n          name=\"arrow-down\"\r\n          fill={color.primary.blue}\r\n          stroke={color.primary.blue}\r\n          width={14}\r\n          height={14}\r\n        />\r\n      </Btn>\r\n      <MonthAndYear>\r\n        {titleMonth}, {date.year}\r\n      </MonthAndYear>\r\n      <Btn onClick={handleIncrementMonth} disabled={isLoading}>\r\n        <Icon\r\n          name=\"arrow-down\"\r\n          fill={color.primary.blue}\r\n          stroke={color.primary.blue}\r\n          width={14}\r\n          height={14}\r\n        />\r\n      </Btn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PaginationMonth;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Item = styled.li`\r\n  position: static;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  border-radius: 50%;\r\n\r\n  background-color: ${color.primary.white};\r\n\r\n  border: ${props =>\r\n    props.isDone ? 'none' : `1px solid ${color.secondary.orange}`};\r\n\r\n  margin-bottom: 4px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 34px;\r\n    height: 34px;\r\n  }\r\n`;\r\n\r\nexport const CountDay = styled.p`\r\n  font-size: 14px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const Percent = styled.p`\r\n  color: ${color.secondary.azure};\r\n\r\n  text-align: center;\r\n\r\n  font-size: 10px;\r\n  line-height: 1.25;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 13px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { color } from 'styles/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: absolute;\r\n  top: -160px;\r\n  left: -7px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n\r\n  width: 292px;\r\n  height: 188px;\r\n\r\n  padding: 24px 13px;\r\n\r\n  background-color: ${color.primary.white};\r\n\r\n  border-radius: 10px;\r\n\r\n  box-shadow: 0 4px 4px 0 #407bff4d;\r\n\r\n  z-index: 10;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 24px 16px;\r\n    top: -189px;\r\n    left: ${({ isToLeft }) => (isToLeft ? '17px' : '-275px')};\r\n  }\r\n\r\n  animation: 250ms ease-in-out smoothAppearance;\r\n`;\r\n\r\nexport const DateMonthTitle = styled.p`\r\n  color: ${color.primary.blue};\r\n`;\r\n\r\nexport const MarkTitle = styled.p`\r\n  color: ${color.primary.black};\r\n`;\r\n\r\nexport const Mark = styled.span`\r\n  color: ${color.primary.blue};\r\n\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  position: absolute;\r\n  background: transparent;\r\n  border: none;\r\n\r\n  top: 21px;\r\n  right: 13px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    right: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    display: none;\r\n  }\r\n\r\n  & .icon {\r\n    transform: rotate(45deg);\r\n  }\r\n`;\r\n","import Icon from 'components/common/Icon';\r\nimport {\r\n  Btn,\r\n  DateMonthTitle,\r\n  Mark,\r\n  MarkTitle,\r\n  Wrapper,\r\n} from './DaysGeneralStats.styled';\r\nimport { color } from 'styles/colors';\r\nimport { PropTypes } from 'prop-types';\r\nimport { removeTargetDay } from 'store/waterData/waterDataSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst firstOfFourDaysArr = [1, 2, 3, 4, 11, 12, 13, 14, 21, 22, 23, 24, 31];\r\n\r\nconst DaysGeneralStats = ({\r\n  targetDay: { day, month, servings = 0, percent },\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { dailyNorma } = useAuth();\r\n\r\n  const handleClose = () => {\r\n    dispatch(removeTargetDay());\r\n  };\r\n\r\n  return (\r\n    <Wrapper isToLeft={firstOfFourDaysArr.includes(day)}>\r\n      <Btn onClick={handleClose}>\r\n        <Icon name=\"plus\" stroke={color.primary.blue} />\r\n      </Btn>\r\n      <DateMonthTitle>\r\n        {day}, {month}\r\n      </DateMonthTitle>\r\n      <MarkTitle>\r\n        Daily norma: <Mark>{dailyNorma} L</Mark>\r\n      </MarkTitle>\r\n      <MarkTitle>\r\n        Fulfillment of the daily norm: <Mark>{percent}%</Mark>\r\n      </MarkTitle>\r\n      <MarkTitle>\r\n        How many servings of water: <Mark>{servings}</Mark>\r\n      </MarkTitle>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DaysGeneralStats;\r\n\r\nDaysGeneralStats.propTypes = {\r\n  targetDay: PropTypes.shape({\r\n    day: PropTypes.number,\r\n    month: PropTypes.string,\r\n    servings: PropTypes.number,\r\n    percent: PropTypes.number,\r\n  }),\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { Btn, CountDay, Item, Percent } from './DayItemCalendar.styled';\r\nimport { setTargetDay, removeTargetDay } from 'store/waterData/waterDataSlice';\r\nimport { memo, useContext, useEffect, useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { HomeContext } from 'pages/HomePage/HomePage';\r\nimport DaysGeneralStats from 'components/MonthStatsTable/DayItemCalendar/DaysGeneralStats';\r\nimport { useWaterData } from 'hooks/useWaterData';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\nconst dateNow = new Date();\r\n\r\nconst DayItemCalendar = memo(({ day }) => {\r\n  const { titleMonth, date } = useContext(HomeContext);\r\n  const [percent, setPercent] = useState(0);\r\n  const [dayData, setDayData] = useState(null);\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth >= 1440);\r\n  const { targetDay, daysOfMonth, dataToday } = useWaterData();\r\n  const { dailyNorma } = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (day) {\r\n      setDayData(\r\n        dateNow.getFullYear() === date.year &&\r\n          dateNow.getMonth() === date.month &&\r\n          dateNow.getDate() === day\r\n          ? {\r\n              day: day,\r\n              overall: dataToday.reduce((acc, el) => el.dosage + acc, 0),\r\n              servings: dataToday.length,\r\n            }\r\n          : daysOfMonth?.find(el => el.day === day)\r\n      );\r\n    }\r\n  }, [setDayData, dataToday, date, day, daysOfMonth]);\r\n\r\n  useEffect(() => {\r\n    if (daysOfMonth && dayData) {\r\n      const res =\r\n        dayData.overall >= dailyNorma * 1000\r\n          ? 100\r\n          : Math.round((dayData.overall / (dailyNorma * 1000)) * 100);\r\n      setPercent(res);\r\n    }\r\n  }, [daysOfMonth, setPercent, dayData, dailyNorma]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsDesktop(window.innerWidth >= 1440);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleOnTarget = () => {\r\n    const info = {\r\n      ...dayData,\r\n      month: titleMonth,\r\n      day,\r\n      percent,\r\n    };\r\n    dispatch(setTargetDay(info));\r\n  };\r\n\r\n  const handleOffTarget = () => {\r\n    dispatch(removeTargetDay());\r\n  };\r\n\r\n  return (\r\n    <Item>\r\n      {isDesktop ? (\r\n        <Btn\r\n          onMouseEnter={handleOnTarget}\r\n          onMouseLeave={handleOffTarget}\r\n          isDone={percent === 100}\r\n        >\r\n          <CountDay>{day}</CountDay>\r\n        </Btn>\r\n      ) : (\r\n        <Btn onClick={handleOnTarget} isDone={percent === 100}>\r\n          <CountDay>{day}</CountDay>\r\n        </Btn>\r\n      )}\r\n\r\n      <Percent>{percent}%</Percent>\r\n\r\n      {targetDay?.day === day && <DaysGeneralStats targetDay={targetDay} />}\r\n    </Item>\r\n  );\r\n});\r\n\r\nexport default DayItemCalendar;\r\n\r\nDayItemCalendar.propTypes = {\r\n  day: PropTypes.number,\r\n};\r\n","import { CalendarBox, HeadBox, List, TitleBox } from './MonthStatsTable.styled';\r\nimport { useContext } from 'react';\r\nimport { useDaysOfMonth } from 'hooks/useDaysOfMonth';\r\nimport { HomeContext } from 'pages/HomePage/HomePage';\r\nimport PaginationMonth from './PaginationMonth';\r\nimport DayItemCalendar from './DayItemCalendar';\r\nimport { useWaterData } from 'hooks/useWaterData';\r\n\r\nconst MonthStatsTable = () => {\r\n  const { date } = useContext(HomeContext);\r\n  const days = useDaysOfMonth(date);\r\n  const { isLoading } = useWaterData();\r\n\r\n  return (\r\n    <CalendarBox>\r\n      <HeadBox>\r\n        <TitleBox>Month</TitleBox>\r\n        <PaginationMonth />\r\n      </HeadBox>\r\n      {days.length > 0 && !isLoading && (\r\n        <List>\r\n          {days.map(({ year, month, day }) => {\r\n            return <DayItemCalendar key={`${year}${month}${day}`} day={day} />;\r\n          })}\r\n        </List>\r\n      )}\r\n    </CalendarBox>\r\n  );\r\n};\r\n\r\nexport default MonthStatsTable;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useDaysOfMonth = date => {\r\n  const [days, setDays] = useState(0);\r\n  const [arrMonth, setArrMonth] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const generateDaysArray = () => {\r\n      const arr = [];\r\n      for (let i = 1; i <= days; i++) {\r\n        arr.push({ year: date.year, month: date.month, day: i });\r\n      }\r\n      setArrMonth(arr);\r\n    };\r\n\r\n    if (date) {\r\n      setDays(new Date(date.year, date.month + 1, 0).getDate());\r\n      setArrMonth([]);\r\n    }\r\n\r\n    generateDaysArray();\r\n  }, [date, days]);\r\n\r\n  return arrMonth;\r\n};\r\n","import styled from 'styled-components';\r\nimport { color } from '../../styles/colors';\r\n\r\nexport const WaterRatioPanelContainer = styled.div`\r\n  width: 280px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 704px;\r\n    gap: 24px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 592px;\r\n    gap: 32px;\r\n  }\r\n`;\r\n\r\nexport const WaterRange = styled.input`\r\n  &[type='range'] {\r\n    -webkit-appearance: none;\r\n    margin: 5px 0;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background-color: ${color.secondary.azure};\r\n    background-image: linear-gradient(\r\n      ${color.primary.blue},\r\n      ${color.primary.blue}\r\n    );\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  &[type='range']:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &[type='range']::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 8px;\r\n    animate: 0.2s;\r\n    border-radius: 10px;\r\n    -webkit-appearance: none;\r\n    box-shadow: none;\r\n    border: none;\r\n    background: transparent;\r\n  }\r\n\r\n  &[type='range']::-webkit-slider-thumb {\r\n    height: 14px;\r\n    width: 14px;\r\n    border-radius: 50%;\r\n    background: ${color.primary.white};\r\n    border: solid 1px ${color.primary.blue};\r\n    -webkit-appearance: none;\r\n    margin-top: -4px;\r\n  }\r\n\r\n  &[type='range']:focus::-webkit-slider-runnable-track {\r\n  }\r\n`;\r\n\r\nexport const WaterRangeHeader = styled.p`\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  margin-bottom: 16px;\r\n  color: ${color.primary.blue};\r\n`;\r\nexport const WaterRangeContainer = styled.div`\r\n  position: relative;\r\n  height: 102px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 356px;\r\n    height: 90px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n  }\r\n`;\r\n\r\nexport const MarksContainer = styled.div`\r\n  height: 32px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Mark = styled.span`\r\n  position: absolute;\r\n  transform: translateX(-50%);\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  margin-bottom: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  color: ${color.primary.blue};\r\n\r\n  &::before {\r\n    color: ${color.secondary.azure};\r\n    content: '|';\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const LeftMark = styled.span`\r\n  transform: translateX(-50%);\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  color: ${color.primary.blue};\r\n\r\n  &::before {\r\n    color: ${color.secondary.azure};\r\n    display: flex;\r\n    gap: 4px;\r\n    flex-direction: column;\r\n    content: '|';\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const RightMark = styled.span`\r\n  transform: translateX(50%);\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n  color: ${color.primary.blue};\r\n\r\n  &::before {\r\n    color: ${color.secondary.azure};\r\n    display: flex;\r\n    flex-direction: column;\r\n    content: '|';\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const AddWaterButton = styled.button`\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  padding: 6px 76px 6px 76px;\r\n  background-color: ${color.primary.blue};\r\n  color: ${color.primary.white};\r\n  border: none;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 336px;\r\n    padding: 10px 104px 10px 104px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 178px;\r\n    height: 44px;\r\n    padding: 10px 30px 10px 30px;\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\r\nimport Icon from 'components/common/Icon';\r\nimport { color } from 'styles/colors';\r\nimport {\r\n  WaterRatioPanelContainer,\r\n  WaterRangeHeader,\r\n  WaterRangeContainer,\r\n  WaterRange,\r\n  MarksContainer,\r\n  LeftMark,\r\n  RightMark,\r\n  Mark,\r\n  AddWaterButton,\r\n} from './WaterRatioPanel.styled';\r\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\r\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\r\nimport { useContext } from 'react';\r\nimport { useWaterData } from 'hooks/useWaterData';\r\n\r\nconst WaterRatioPanel = () => {\r\n  const toggleModal = useContext(ModalContext);\r\n\r\n  const { totalTodayDailyWater } = useWaterData();\r\n\r\n  const handleClickAdd = () => {\r\n    toggleModal(<TodayListModal />);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ele = document.querySelector('#mark');\r\n    if (ele) {\r\n      let newVal = Number(((totalTodayDailyWater - 0) * 100) / (100 - 0));\r\n      newVal = newVal >= 100 ? 100 : newVal;\r\n      ele.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\r\n    }\r\n  }, [totalTodayDailyWater]);\r\n\r\n  const getBackgroundSize = () => {\r\n    return {\r\n      backgroundSize: `${totalTodayDailyWater}%`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <WaterRatioPanelContainer>\r\n      <WaterRangeContainer>\r\n        <WaterRangeHeader>Today</WaterRangeHeader>\r\n        <WaterRange\r\n          type=\"range\"\r\n          maxValue={100}\r\n          minValue={0}\r\n          value={totalTodayDailyWater}\r\n          readOnly={true}\r\n          style={getBackgroundSize()}\r\n        />\r\n        <MarksContainer>\r\n          <LeftMark>0%</LeftMark>\r\n          <Mark id=\"mark\">{`${\r\n            totalTodayDailyWater > 100 ? 100 : totalTodayDailyWater\r\n          }%`}</Mark>\r\n          <RightMark>100%</RightMark>\r\n        </MarksContainer>\r\n      </WaterRangeContainer>\r\n      <AddWaterButton onClick={handleClickAdd}>\r\n        <Icon name=\"add\" stroke={color.primary.white} /> Add Water\r\n      </AddWaterButton>\r\n    </WaterRatioPanelContainer>\r\n  );\r\n};\r\n\r\nexport default WaterRatioPanel;\r\n","import { defineMonth } from 'utils/defineMonth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useWaterData } from 'hooks/useWaterData';\r\nimport { getMonthDays, getWaterToday } from 'store/waterData/thunk';\r\nimport { createContext, useEffect, useState } from 'react';\r\nimport { Wrapper, Box, WaterList, DailyNormaBox } from './HomePage.styled';\r\nimport Container from 'components/common/Container';\r\nimport DailyNorma from 'components/DailyNorma/DailyNorma';\r\nimport TodayWaterList from 'components/TodayWaterList/TodayWaterList';\r\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\r\nimport MonthStatsTable from 'components/MonthStatsTable';\r\nimport WaterRatioPanel from 'components/WaterRatioPanel/WaterRatioPanel';\r\nimport Loader from 'components/common/Loader';\r\n\r\nconst dateNow = new Date();\r\n\r\nexport const HomeContext = createContext();\r\n\r\nconst HomePage = () => {\r\n  const { isLoading } = useWaterData();\r\n\r\n  const [date, setDate] = useState({\r\n    year: dateNow.getFullYear(),\r\n    month: dateNow.getMonth(),\r\n    day: dateNow.getDate(),\r\n  });\r\n  const [titleMonth, setTitleMonth] = useState(\r\n    defineMonth(date.year, date.month, date.day)\r\n  );\r\n  const { isChangeNote, todayListModalOpen } = useWaterData();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getWaterToday());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isChangeNote) {\r\n      const params = {\r\n        year: date.year,\r\n        month: defineMonth(date.year, date.month, date.day),\r\n      };\r\n      dispatch(getMonthDays(params));\r\n    }\r\n  }, [titleMonth, date, isChangeNote, dispatch]);\r\n\r\n  return (\r\n    <HomeContext.Provider value={{ date, setDate, titleMonth, setTitleMonth }}>\r\n      <Wrapper>\r\n        <Container>\r\n          <Box>\r\n            <DailyNormaBox>\r\n              <DailyNorma />\r\n              <WaterRatioPanel />\r\n            </DailyNormaBox>\r\n\r\n            {todayListModalOpen && <TodayListModal />}\r\n\r\n            <WaterList>\r\n              <TodayWaterList />\r\n              <MonthStatsTable />\r\n            </WaterList>\r\n            {isLoading && <Loader />}\r\n          </Box>\r\n        </Container>\r\n      </Wrapper>\r\n    </HomeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["defineMonth","year","month","day","format","Date","dataTodaySelector","state","waterData","dataToday","selectTotalTodayDailyWater","createSelector","auth","user","dailyNorma","norma","totalTodayWater","reduce","total","dosage","Number","toFixed","selectIsLoading","isLoading","targetDaySelector","targetDay","daysOfMonthSelector","daysOfMonth","isChangeNoteSelector","isChangeNote","useWaterData","useSelector","totalTodayDailyWater","daysOfTheMonth","DailyNormaContainer","styled","_templateObject","_taggedTemplateLiteral","color","DailyNormaHeader","_templateObject2","DailyNormaContainerWaterStat","_templateObject3","DailyNormaWaterNorma","_templateObject4","DailyNormaButton","_templateObject5","validationSchema","Yup","gender","required","weight","min","activityTime","drankWaterAmount","Label","LableAddEdit","Input","AuthInput","SettingsInput","ErrorMessage","_templateObject6","_ref","inputType","label","error","props","_objectWithoutProperties","_excluded","_jsxs","children","_jsx","_objectSpread","ModalBox","ModalHeader","CloseButton","GenderFormulas","ItemsGenders","Formulas","VolumeNorm","_templateObject7","StyledForm","_templateObject8","FormTitle","_templateObject9","Genders","_templateObject10","Required","_templateObject11","L","_templateObject12","SaveWrapper","_templateObject13","toggleModal","useContext","ModalContext","dispatch","useDispatch","useAuth","_useState","useState","_useState2","_slicedToArray","calculatedWaterAmount","setCalculatedWaterAmount","calculateWaterAmount","useCallback","values","weightCoefficient","timeCoefficient","calculatedAmount","handleInputChange","e","fieldName","formik","handleChange","inputText","target","value","numericValue","parseFloat","isNaN","setFieldValue","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","updateDailyNorma","resetForm","stop","apply","arguments","useFormik","initialValues","onSubmit","useEffect","Modal","onClose","_Fragment","onClick","Icon","name","width","height","fill","stroke","className","type","checked","onChange","FormInput","onBlur","handleBlur","touched","errors","concat","Button","DailyNormaModal","WaterInfoContainer","WaterInfo","WaterTime","ButtonControlContainer","ButtonControl","DeleteModalBox","ButtonBox","DeleteModalTitle","DeleteModalDescription","TitleBox","ButtonPadding","ButtonMargin","BrSpan","id","onClickCloseBtn","buttonType","style","boxShadow","deleteWaterTodayById","TodayModalListHeader","TodayModalListTitle","TodayModalListSubTitle","CommonContainer","AmountWaterContainer","AmountWaterButtonContainer","WaterValueContainer","WaterValue","ButtonContainer","SaveContainer","_templateObject14","_ref$type","length","lastAddWaterDosageIndex","waterValue","setWaterValue","_useState3","dateNow","hours","getHours","toString","minutes","getMinutes","_useState4","timeValue","setTimeValue","waterRecord","find","data","_id","time","water_attr","document","querySelectorAll","forEach","element","innerHTML","event","currentTarget","max","today","getDate","MONTH","getMonth","getFullYear","editWaterTodayById","saveWaterToday","waterInfo","TodayListModal","RemoveListItemModal","TodayWaterListItemContainer","TodayWaterListContainer","TodayWaterListing","TodayWaterListHeader","AddWaterButton","waterItems","Loader","map","waterItem","TodayWaterListItem","CalendarBox","HeadBox","List","Wrapper","MonthAndYear","Btn","_useContext","HomeContext","date","setDate","titleMonth","setTitleMonth","prevState","swithChangeNote","disabled","Item","isDone","CountDay","Percent","isToLeft","DateMonthTitle","MarkTitle","Mark","firstOfFourDaysArr","_ref$targetDay","_ref$targetDay$servin","servings","percent","includes","removeTargetDay","memo","setPercent","dayData","setDayData","_useState5","window","innerWidth","_useState6","isDesktop","setIsDesktop","_useWaterData","overall","acc","el","res","Math","round","handleResize","addEventListener","removeEventListener","handleOnTarget","info","setTargetDay","onMouseEnter","onMouseLeave","DaysGeneralStats","days","setDays","arrMonth","setArrMonth","arr","i","push","generateDaysArray","useDaysOfMonth","PaginationMonth","DayItemCalendar","WaterRatioPanelContainer","WaterRange","WaterRangeHeader","WaterRangeContainer","MarksContainer","LeftMark","RightMark","ele","querySelector","newVal","left","maxValue","minValue","readOnly","backgroundSize","createContext","_useWaterData2","todayListModalOpen","getWaterToday","params","getMonthDays","Provider","Container","Box","DailyNormaBox","DailyNorma","WaterRatioPanel","WaterList","TodayWaterList","MonthStatsTable"],"sourceRoot":""}